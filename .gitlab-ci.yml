# Copyright 2015-2024 IQRF Tech s.r.o.
# Copyright 2019-2024 MICRORISC s.r.o.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

stages:
  - test
  - jsonnet
  - deploy-api

.ccache-template: &ccache-template
  before_script:
    - export CCACHE_COMPILERCHECK="content"
    - export CCACHE_COMPRESS="true"
    - export CCACHE_BASEDIR="$PWD"
    - export CCACHE_DIR="${CCACHE_BASEDIR}/.ccache"
    - ccache --zero-stats --show-stats
    - echo "CCACHEDIR=~/.ccache" > ~/.pbuilderrc
  after_script:
    - export CCACHE_DIR="${PWD}/.ccache"
    - ccache --show-stats
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - .ccache/

.debian-bullseye-amd64-template: &debian-bullseye-amd64-template
  image: iqrftech/debian-c-builder:debian-bullseye-amd64
  variables:
    ARCH: "amd64"
    DIST: "bullseye"
  tags:
    - linux, amd64

.ssh-template:
  before_script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - git checkout -B "$CI_COMMIT_REF_NAME" "$CI_COMMIT_SHA"
    - git submodule update --init --recursive

test:
  stage: test
  extends: .ssh-template
  script:
    - mkdir deploy
    - git clone --recurse-submodules https://github.com/logimic/shape.git
    - cmake -Bshape-build -Hshape -DBUILD_TESTING:BOOL=true -DCMAKE_BUILD_TYPE=Debug -DSHAPE_DEPLOY:PATH=$PWD/deploy -DUSE_CCACHE=TRUE
    - cmake --build shape-build --target install
    - git clone --recurse-submodules https://github.com/logimic/shapeware.git
    - cmake -Bshapeware-build -Hshapeware -Dshape_DIR:PATH=`pwd`/shape-build -DBUILD_TESTING:BOOL=true -DCMAKE_BUILD_TYPE=Debug -DUSE_CCACHE=TRUE
    - cmake --build shapeware-build --target install
    - git submodule update --init --recursive
    - cmake -Bbuild -H. -Dshape_DIR:PATH=`pwd`/shape-build -Dshapeware_DIR:PATH=`pwd`/shapeware-build -DBUILD_TESTING:BOOL=true -DCMAKE_BUILD_TYPE=Debug -DUSE_CCACHE=TRUE
    - cmake --build build --target install
    - cd build/ && ctest -V
  <<: *debian-bullseye-amd64-template
  <<: *ccache-template

api-testing:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
  script:
    - docker-compose -f apitesting.docker-compose.yml up --build --abort-on-container-exit --exit-code-from tests
  tags:
    - docker
    - daemon-api-testing

# Jsonnet
jsonnet-build:
  image: alpine:latest
  stage: jsonnet
  script:
    - apk add -U jsonnet
    - jsonnet -o .gitlab/packages.yml .gitlab/packages.jsonnet
  artifacts:
    paths:
      - .gitlab/packages.yml

jsonnet-trigger-packages:
  stage: jsonnet
  needs:
    - jsonnet-build
  trigger:
    forward:
      pipeline_variables: true
    include:
      - artifact: .gitlab/packages.yml
        job: jsonnet-build
    strategy: depend

# API
api-deploy:
  stage: deploy-api
  only:
    - master
  extends: .ssh-template
  dependencies: []
  script:
    - rsync -hrvz --delete -e ssh api/ www-deploy@icinga.iqrf.org:/data/nginx/apidocs/iqrf-gateway-daemon/latest/json/iqrf/
  <<: *debian-bullseye-amd64-template

include:
  - template: Code-Quality.gitlab-ci.yml
  - template: Security/SAST.gitlab-ci.yml
