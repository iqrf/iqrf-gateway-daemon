image: buildpack-deps:stretch

stages:
 - dependencies
 - build

before_script:
 # build environment
 - apt-get update -y
 - apt-get install --no-install-recommends -y build-essential git cmake gcc g++ zlib1g-dev libcpprest-dev libssl-dev mlocate ruby ruby-dev unzip wget openssh-client
 - apt-get clean
 - rm -rf /var/lib/apt/lists/*
 
 # tool to create deb package
 - gem install --no-rdoc --no-ri fpm
 
 # run ssh-agent (inside the build environment)
 - eval $(ssh-agent -s)

 # load the private key, which is accesible as a environment variable
 - echo "$GIT_SSH_PRIVATE" | tr -d '\r' | ssh-add - > /dev/null
 - mkdir -p ~/.ssh
 - chmod 700 ~/.ssh

 # ensure that ssh will trust a new host, instead of asking
 - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config

shape_&_shapeware:
 stage: dependencies
 script:
  - git clone https://github.com/logimic/shape.git shape-source
  - mkdir shape-build shape-libs
  - cmake -Bshape-build -Hshape-source -DCMAKE_BUILD_TYPE=Debug
  - make -j$(nproc) -C shape-build
  - bash .gitlab_build_files/copy_shape_libs.sh shape-libs
  - tar czvf shape-source_amd64.tar.gz shape-source
  - tar czvf shape-build_amd64.tar.gz shape-build
  - tar czvf shape-libs_amd64.tar.gz shape-libs
  - git clone https://github.com/logimic/shapeware.git shapeware-source
  - git -C shapeware-source submodule init
  - git -C shapeware-source submodule update
  - mkdir shapeware-build shapeware-libs
  - cmake -Bshapeware-build -Hshapeware-source -Dshape_DIR:PATH=../shape-build -DCMAKE_BUILD_TYPE=Debug -DLWS_STATIC_PIC:BOOL=true -DLWS_WITH_SSL:BOOL=false
  - make -j$(nproc) -C shapeware-build
  - bash .gitlab_build_files/copy_shapeware_libs.sh shapeware-libs
  - tar czvf shapeware-source_amd64.tar.gz shapeware-source
  - tar czvf shapeware-build_amd64.tar.gz shapeware-build
  - tar czvf shapeware-libs_amd64.tar.gz shapeware-libs 
 artifacts:
  paths:
   - shape-source_amd64.tar.gz
   - shape-build_amd64.tar.gz
   - shape-libs_amd64.tar.gz
   - shapeware-source_amd64.tar.gz
   - shapeware-build_amd64.tar.gz
   - shapeware-libs_amd64.tar.gz
 tags:
  - linux, amd64

paho:
 stage: dependencies
 script:
  - git clone https://github.com/eclipse/paho.mqtt.c.git paho-source
  - git -C paho-source checkout v1.2.0
  - mkdir paho-build
  - cmake -Bpaho-build -Hpaho-source -DCMAKE_BUILD_TYPE=Debug -DPAHO_WITH_SSL=TRUE
  - make -j$(nproc) -C paho-build
  - tar czvf paho-source_amd64.tar.gz paho-source
  - tar czvf paho-build_amd64.tar.gz paho-build
 artifacts:
  paths:
   - paho-source_amd64.tar.gz
   - paho-build_amd64.tar.gz
 tags:
  - linux, amd64

daemon:
 stage: build
 script:
  - git clone ssh://git@gitlab.iqrfsdk.org:2222/gateway/iqrf-daemon.git iqrf-daemon-source
  - git -C iqrf-daemon-source submodule init
  - git -C iqrf-daemon-source submodule update
  - mkdir iqrf-daemon-build iqrf-daemon-deploy
  - tar xzvf shape-source_amd64.tar.gz
  - tar xzvf shape-build_amd64.tar.gz
  - tar xzvf shape-libs_amd64.tar.gz
  - tar xzvf shapeware-source_amd64.tar.gz
  - tar xzvf shapeware-build_amd64.tar.gz
  - tar xzvf shapeware-libs_amd64.tar.gz
  - tar xzvf paho-source_amd64.tar.gz
  - tar xzvf paho-build_amd64.tar.gz
  - make -j$(nproc) install -C paho-build
  - ldconfig
  - cmake -Biqrf-daemon-build -Hiqrf-daemon-source -Dshape_DIR:PATH=../shape-build -Dshapeware_DIR:PATH=../../shapeware-build -DCMAKE_BUILD_TYPE=Debug
  - make -j$(nproc) -C iqrf-daemon-build
  - bash .gitlab_build_files/copy_daemon_files.sh iqrf-daemon-deploy
  - bash .gitlab_build_files/create_daemon_package.sh
  - tar czvf iqrf-daemon-deploy_amd64.tar.gz iqrf-daemon-deploy    
 artifacts:
  paths:
   - iqrf-gateway-daemon_*_amd64.deb
   - iqrf-daemon-deploy_amd64.tar.gz
 tags:
  - linux, amd64
