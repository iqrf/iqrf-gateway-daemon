{
  "$schema": "https://json-schema.org/draft-07/schema",
  "title": "IQMESH Network - Write TR configuration request",
  "description": "(c) IQRF Tech",
  "type": "object",
  "required": [
    "mType",
    "data"
  ],
  "additionalProperties": false,
  "properties": {
    "mType": {
      "allOf": [
        { "$ref": "definitions.json#/general/mType" },
        { "const": "iqmeshNetwork_WriteTrConf" }
      ]
    },
    "data": {
      "title": "Message data",
      "description": "Message metadata and body",
      "type": "object",
      "required": [
        "msgId",
        "req"
      ],
      "additionalProperties": false,
      "properties": {
        "msgId": {
          "$ref": "definitions.json#/general/msgId"
        },
        "req": {
          "title": "Request",
          "description": "Holds request data",
          "type": "object",
          "required": [
            "deviceAddr"
          ],
          "additionalProperties": false,
          "properties": {
            "deviceAddr": {
              "$ref": "definitions.json#/general/nAdr",
              "description": "Device address to write the configuration to. Broadcast address is also allowed."
            },
            "hwpId": {
              "$ref": "definitions.json#/general/request/hwpId"
            },
            "embPers": {
              "$ref": "definitions.json#/iqmesh/trConfig/embPers"
            },
            "rfChannelA": {
              "$ref": "definitions.json#/iqmesh/trConfig/rfChannelA"
            },
            "rfChannelB": {
              "$ref": "definitions.json#/iqmesh/trConfig/rfChannelB"
            },
            "rfSubChannelA": {
              "$ref": "definitions.json#/iqmesh/trConfig/rfSubChannelA"
            },
            "rfSubChannelB": {
              "$ref": "definitions.json#/iqmesh/trConfig/rfSubChannelB"
            },
            "txPower": {
              "$ref": "definitions.json#/iqmesh/trConfig/txPower"
            },
            "rxFilter": {
              "$ref": "definitions.json#/iqmesh/trConfig/rxFilter"
            },
            "lpRxTimeout": {
              "$ref": "definitions.json#/iqmesh/trConfig/lpRxTimeout"
            },
            "rfAltDsmChannel": {
              "$ref": "definitions.json#/iqmesh/trConfig/rfAltDsmChannel"
            },
            "localFrcReception": {
              "$ref": "definitions.json#/iqmesh/trConfig/localFrcReception"
            },
            "rfPgmEnableAfterReset": {
              "$ref": "definitions.json#/iqmesh/trConfig/rfPgmEnableAfterReset"
            },
            "rfPgmTerminateAfter1Min": {
              "$ref": "definitions.json#/iqmesh/trConfig/rfPgmTerminateAfter1Min"
            },
            "rfPgmTerminateMcuPin": {
              "$ref": "definitions.json#/iqmesh/trConfig/rfPgmTerminateMcuPin"
            },
            "rfPgmDualChannel": {
              "$ref": "definitions.json#/iqmesh/trConfig/rfPgmDualChannel"
            },
            "rfPgmLpMode": {
              "$ref": "definitions.json#/iqmesh/trConfig/rfPgmLpMode"
            },
            "rfPgmIncorrectUpload": {
              "$ref": "definitions.json#/iqmesh/trConfig/rfPgmIncorrectUpload"
            },
            "customDpaHandler": {
              "$ref": "definitions.json#/iqmesh/trConfig/customDpaHandler"
            },
            "dpaPeerToPeer": {
              "$ref": "definitions.json#/iqmesh/trConfig/dpaPeerToPeer"
            },
            "nodeDpaInterface": {
              "$ref": "definitions.json#/iqmesh/trConfig/nodeDpaInterface"
            },
            "uartBaudrate": {
              "$ref": "definitions.json#/iqmesh/trConfig/uartBaudrate"
            },
            "dpaAutoexec": {
              "$ref": "definitions.json#/iqmesh/trConfig/dpaAutoexec"
            },
            "routingOff": {
              "$ref": "definitions.json#/iqmesh/trConfig/routingOff"
            },
            "ioSetup": {
              "$ref": "definitions.json#/iqmesh/trConfig/ioSetup"
            },
            "peerToPeer": {
              "$ref": "definitions.json#/iqmesh/trConfig/peerToPeer"
            },
            "neverSleep": {
              "$ref": "definitions.json#/iqmesh/trConfig/neverSleep"
            },
            "stdAndLpNetwork": {
              "$ref": "definitions.json#/iqmesh/trConfig/stdAndLpNetwork"
            },
            "accessPassword": {
              "type": "string",
              "description": "It sets access password. If the field is left completely empty (no characters filled), the default password (16x number 0x00) is used (the same as the default set from the factory).",
              "maxItems": 16
            },
            "securityUserKey": {
              "type": "string",
              "description": "It sets security user key. Enter a value up to 16 characters.",
              "maxItems": 16
            }
          }
        },
        "repeat": {
          "$ref": "definitions.json#/iqmesh/repeat"
        },
        "returnVerbose": {
          "$ref": "definitions.json#/general/returnVerbose"
        }
      }
    }
  }
}
