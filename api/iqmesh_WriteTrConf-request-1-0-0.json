{
	"$schema": "http://apidocs.iqrfsdk.org/iqrf-gateway-daemon/com.iqrftech.self-desc/schema/jsonschema/1-0-0#",
	"self": {
		"vendor": "com.iqrftech.self-desc",
		"name": "iqmesh_WriteTrConf-request",
		"format": "jsonschema",
		"version": "1-0-0"
	},
	"type": "object",
	"properties": {
		"mType": {
			"type": "string",
			"description": "iqmesh_ Network management - Write TR configuration request.",
			"enum": [
				"iqmesh_WriteTrConf"
			]
		},
		"data": {
			"type": "object",
			"properties": {
				"msgId": {
					"type": "string",
					"description": "Message identification for binding request with response."
				},
				"repeat": {
					"type": "integer",
					"description": "Number of repetitions of DPA messages.",
					"default": 1
				},
				"restart": {
					"type": "boolean",
					"description": "Restart required after writing the configuration.",
					"default": true
				},
				"req": {
					"type": "object",
					"properties": {
						"deviceAddr": {
							"type": "array",
							"description": "Device address(es) to write the configuration to. Broadcast address is also allowed.",
							"items": {
								"type": "integer"
							}
						},
						"rfBand": {
							"type": "string",
							"description": "Used RF band."
						},
						"rfChannelA": {
							"type": "integer",
							"description": "Main RF channel A of the main network. Valid numbers depend on used RF band."
						},
						"rfChannelB": {
							"type": "integer",
							"description": "Same as above but second B channel. Used at RFPGM only."
						},
						"rfSubChannelA": {
							"type": "integer",
							"description": "Main RF channel A of the optional subordinate network in case the node also plays a role of the coordinator of such network. Valid numbers depend on used RF band."
						},
						"rfSubChannelB": {
							"type": "integer",
							"description": "Same as above but second B channel."
						},
						"txPower": {
							"type": "integer",
							"description": "RF output power. Valid numbers 0-7."
						},
						"rxFilter": {
							"type": "integer",
							"description": "RF signal filter. Valid numbers 0-64."
						},
						"lpRxTimeout": {
							"type": "integer",
							"description": "Timeout for receiving RF packets at LP mode at N device."
						},
						"rfPgmAltChannel": {
							"type": "integer",
							"description": "A nonzero value specifies an alternative DPA service mode channel."
						},
						"rfPgmEnableAfterReset": {
							"type": "boolean",
							"description": "If sets, then activates RFPGM invoking by TR module reset."
						},
						"rfPgmTerminateAfter1Min": {
							"type": "boolean",
							"description": "If sets, then terminates RFPGM automatically ~1 minute after reset."
						},
						"rfPgmTerminateMcuPin": {
							"type": "boolean",
							"description": "If sets, then terminates RFPGM by dedicated pin of the TR module."
						},
						"rfPgmDualChannel": {
							"type": "boolean",
							"description": "If sets, then enables single or dual channel function."
						},
						"rfPgmLpMode": {
							"type": "boolean",
							"description": "RFPGM receiving mode setting. If set, then LP (low power) Rx mode is used during RFPGM. Otherwise STD (standard) Rx mode is used."
						},
						"rfPgmIncorrectUpload": {
							"type": "boolean",
							"description": "Read only. Indicates that the last RFPGM has successfully been completed."
						},
						"customDpaHandler": {
							"type": "boolean",
							"description": "If set, then a Custom DPA handler is called in case of an event."
						},
						"nodeDpaInterface": {
							"type": "boolean",
							"description": "If set, then Node device can be controlled by a SPI or UART interface."
						},
						"uartBaudrate": {
							"type": "integer",
							"description": "Baud rate of the UART interface if one is used."
						},
						"dpaAutoexec": {
							"type": "boolean",
							"description": "If set, then DPA Autoexec is run at a later stage of the module boot time."
						},
						"routingOff": {
							"type": "boolean",
							"description": "If set, then the Node device does not route packets on the background."
						},
						"ioSetup": {
							"type": "boolean",
							"description": "If set, then DPA IO Setup is run at an early stage of the module boot time."
						},
						"peerToPeer": {
							"type": "boolean",
							"description": "If set, then device receives also peer-to-peer (non-networking) packets and raises PeerToPeer event."
						},
						"securityPassword": {
							"type": "string",
							"description": "It sets security password. If the field is left completely empty (no characters filled), the default password (16x number 0x00) is used (the same as the default set from the factory."
						},
						"securityUserKey": {
							"type": "string",
							"description": "It sets security user key. Enter a value up to 16 characters."
						}
					},
					"required": [
						"deviceAddr"
					]
				},
				"returnVerbose": {
					"type": "boolean",
					"description": "Flag that includes additional parameters in the response."
				}
			},
			"required": [
				"msgId",
				"req"
			]
		}
	},
	"required": [
		"mType",
		"data"
	]
}
