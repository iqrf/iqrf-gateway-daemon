{
    "$schema": "http://apidocs.iqrfsdk.org/iqrf-gateway-daemon/com.iqrftech.self-desc/schema/jsonschema/1-0-0#",
    "self": {
        "vendor": "com.iqrftech.self-desc",
        "name": "iqrfSensor_Frc-request",
        "format": "jsonschema",
        "version": "1-0-0"
    },
    "type": "object",
    "properties": {
        "mType": {
            "type": "string",
            "description": "Standard peripheral Sensor - FRC request.",
            "enum": [
                "iqrfSensor_Frc"
            ]
        },
        "data": {
            "type": "object",
            "properties": {
                "msgId": {
                    "type": "string",
                    "description": "Message identification for binding request with response."
                },
                "timeout": {
                    "type": "integer",
                    "description": "Timeout to wait for IQRF DPA response."
                },
                "req": {
                    "type": "object",
                    "properties": {
                        "nAdr": {
                            "type": "integer",
                            "description": "Network device address."
                        },
                        "hwpId": {
                            "type": "integer",
                            "description": "Hardware profile identification."
                        },
                        "sensorType": {
                            "type": "integer",
                            "description": "Type of sensor (quantity) to read values of. Use iqrf.sensor.STD_SENSOR_TYPE_* constant. Use 0 to specify the sensor only by sensorIndex parameter."
                        },
                        "sensorIndex": {
                            "type": "integer",
                            "description": "Index of the sensor. If the sensor type is specified, then its is an index among of all sensors of the specified type. If sensorType is 0 then it is overall sensor index. Some FRC commands might use top 3 bits of this parameter for passing additional data."
                        },
                        "frcCmd": {
                            "type": "integer",
                            "description": "One of predefined standard sensor FRC commands. See iqrf.sensor.STD_SENSOR_FRC_* constants."
                        },
                        "selectedNodes": {
                            "type": "array",
                            "description": "Array if integer values corresponding to the selected nodes. Use default value to select all nodes and use sleepAfterFrc parameter.",
                            "items": {
                                "type": "integer"
                            }
                        },
                        "sleepAfterFrc": {
                            "type": "object",
                            "description": "Object with the following fields to put the nodes into sleep mode after the FRC is finished.",
                            "properties": {
                                "time": {
                                    "type": "integer",
                                    "description": "See DPA documentation https://​www​.iqrf​.org​/DpaTechGuide for details."
                                },
                                "control": {
                                    "type": "integer",
                                    "description": "See DPA documentation https://​www​.iqrf​.org​/DpaTechGuide for details."
                                }
                            }
                        }
                    },
                    "required": [
                        "sensorType",
                        "sensorIndex",
                        "frcCmd"
                    ]
                },
                "returnVerbose": {
                    "type": "boolean",
                    "description": "Flag that includes additional parameters in the response."
                }
            },
            "required": [
                "msgId",
                "req"
            ]
        }
    },
    "required": [
        "mType",
        "data"
    ]
}
