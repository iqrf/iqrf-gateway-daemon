{
	"$schema": "http://json-schema.org/draft-07/schema",
	"title": "IQMESH Network - OtaUpload",
	"type": "object",
	"required": [
		"mType",
		"data"
	],
	"additionalProperties": false,
	"properties": {
		"mType": {
			"$ref": "file://definitions.json#/general/mType",
			"description": "IQMESH Network management - OTA upload request.",
			"const": "iqmeshNetwork_OtaUpload"
		},
		"data": {
			"$id": "#/properties/data",
			"title": "Message data",
			"description": "Message metadata and body",
			"type": "object",
			"required": [
				"msgId",
				"req"
			],
			"additionalProperties": false,
			"properties": {
				"msgId": {"$ref": "file://definitions.json#/general/msgId"},
				"req": {
					"$id": "#/properties/data/properties/req",
					"title": "Request data",
					"description": "Request body object",
					"type": "object",
					"required": [
						"deviceAddr",
						"fileName",
						"startMemAddr",
						"loadingAction"
					],
					"additionalProperties": false,
					"properties": {
						"deviceAddr": {
							"$ref": "file://definitions.json#/iqmesh/general/deviceAddrAll",
							"description": "Device address to write the hex or iqrf file. 0 = coordinator, 1..239 = node, 255 = network."
						},
						"hwpId": {"$ref": "file://definitions.json#/general/request/hwpId"},
						"fileName": {
							"$id": "#/properties/data/properties/req/properties/fileName",
							"title": "File name",
							"description": "Full name of file with source code to load.",
							"type": "string",
							"pattern": "^.*\\.(hex|iqrf)$"
						},
						"startMemAddr": {
							"$id": "#/properties/data/properties/req/properties/startMemAddr",
							"title": "Start memory address",
							"description": "Start address on which will be the data saved into memory.",
							"type": "integer",
							"minimum": 768,
							"maximum": 16383
						},
						"loadingAction": {
							"$id": "#/properties/data/properties/req/properties/loadingAction",
							"title": "Loading action",
							"description": "Loading action - upload code, verify code, load code to flash.",
							"type": "string",
							"enum": [
								"Upload",
								"Verify",
								"Load"
							]
						},
						"uploadEepromData": {
							"$id": "#/properties/data/properties/req/properties/uploadEepromData",
							"title": "Upload EEPROM data",
							"description": "Upload internal EEPROM data from hex file.",
							"type": "boolean"
						},
						"uploadEeepromData": {
							"$id": "#/properties/data/properties/req/properties/uploadEeepromData",
							"title": "Upload EEEPROM data",
							"description": "Upload external EEEPROM data from hex file.",
							"type": "boolean"
						}
					}
				},
				"repeat": {"$ref": "file://definitions.json#/iqmesh/general/repeat"},
				"returnVerbose": {"$ref": "file://definitions.json#/general/request/returnVerbose"}
			}
		}
	}
}