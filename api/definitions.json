{
  "general": {
    "mType": {
      "title": "Message type",
      "description": "Daemon API message"
    },
    "msgId": {
      "title": "Message ID",
      "description": "Message identification for binding request with response.",
      "type": "string"
    },
    "mId": {
      "title": "Module ID",
      "type": "integer",
      "minimum": 0,
      "maximum": 4294967295
    },
    "nAdr": {
      "title": "Node address",
      "description": "Network device address.",
      "type": "integer",
      "minimum": 0,
      "maximum": 255
    },
    "returnVerbose": {
      "title": "Verbose response",
      "description": "API response will be more verbose.",
      "type": "boolean"
    },
    "timeout": {
      "title": "Request timeout",
      "description": "Timeout to wait for IQRF DPA response.",
      "type": "integer",
      "minimum": 0
    },
    "ibk": {
      "title": "IBK",
      "description": "Individual Bonding Key [Byte array].",
      "type": "array",
      "items": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "maxItems": 16
    },
    "request": {
      "hwpId": {
        "title": "HWPID",
        "description": "Hardware profile ID.",
        "type": "integer",
        "minimum": 0,
        "maximum": 65535,
        "default": 65535
      }
    },
    "response": {
      "pNum": {
        "title": "Peripheral",
        "description": "Peripheral number.",
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "pCmd": {
        "title": "Peripheral command",
        "description": "Peripheral command number.",
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "hwpId": {
        "title": "HWPID",
        "description": "Hardware profile ID.",
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
          },
          {
            "type": "null"
          }
        ]
      },
      "rCode": {
        "title": "Return code",
        "description": "DPA error code.",
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "null"
          }
        ]
      },
      "dpaVal": {
        "title": "DPA value",
        "description": "DPA value.",
        "oneOf": [
          {
            "type": "integer",
            "minimum": 0
          },
          {
            "type": "null"
          }
        ]
      },
      "status": {
        "title": "Status code",
        "description": "Status of operation.",
        "type": "integer"
      },
      "statusStr": {
        "title": "Status string",
        "description": "IQRF GW daemon API (general or mType) status in string form.",
        "type": "string"
      },
      "insId": {
        "title": "Instance ID",
        "description": "IQRF GW daemon instance identification.",
        "type": "string"
      },
      "errorStr": {
        "title": "Error string",
        "description": "Error description message.",
        "type": "string"
      },
      "raw": {
        "title": "Raw DPA messages",
        "description": "Returns array of objects req-cnf-rsp, see its description.",
        "type": "array",
        "additionalItems": false,
        "items": {
          "title": "Raw DPA messages object",
          "description": "Object containing Request, Confirmation and Response DPA messages and their timestamps.",
          "type": "object",
          "required": [
            "request",
            "requestTs",
            "confirmation",
            "confirmationTs",
            "response",
            "responseTs"
          ],
          "additionalProperties": false,
          "properties": {
            "request": {
              "title": "Request DPA",
              "description": "DPA request string.",
              "type": "string"
            },
            "requestTs": {
              "title": "Request timestamp",
              "description": "YYYY-MM-DDTHH:MM:SS.SSS±HH:MM",
              "type": "string"
            },
            "confirmation": {
              "title": "Confirmation DPA",
              "description": "DPA confirmation string.",
              "type": "string"
            },
            "confirmationTs": {
              "title": "Confirmation timestamp",
              "description": "YYYY-MM-DDTHH:MM:SS.SSS±HH:MM",
              "type": "string"
            },
            "response": {
              "title": "Response DPA",
              "description": "DPA response string",
              "type": "string"
            },
            "responseTs": {
              "title": "Response timestamp",
              "description": "YYYY-MM-DDTHH:MM:SS.SSS±HH:MM",
              "type": "string"
            }
          }
        }
      }
    }
  },
  "explore": {
    "embeddedPers": {
      "type": "array",
      "description": "Array of embedded peripherals (their ordinal numbers), which are enabled in the TR configuration.",
      "items": {
        "type": "integer",
        "minimum": 0,
        "maximum": 31
      },
      "maxItems": 32,
      "uniqueItems": true
    },
    "userPerNr": {
      "type": "integer",
      "description": "Number of all non-embedded peripherals implemented by Custom DPA Handler.",
      "minimum": 0,
      "maximum": 255
    },
    "userPeripherals": {
      "title": "Non-embedded peripherals",
      "description": "Array of implemented non-embedded peripherals (their ordinal numbers).",
      "type": "array",
      "items": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "uniqueItems": true
    },
    "hwpIdVersion": {
      "title": "Hardware profile ID version",
      "type": "integer",
      "minimum": 0,
      "maximum": 65535
    },
    "dpaVer": {
      "title": "DPA version.",
      "type": "integer",
      "minimum": 0,
      "maximum": 65535
    },
    "flags": {
      "title": "Enumeration flags",
      "description": "A byte containing various enumeration flags. For details see Peripheral enumeration in DPA Technical Guide.",
      "type": "integer",
      "minimum": 0,
      "maximum": 255
    },
    "peripheralInformation": {
      "title": "Information about a peripheral",
      "type": "object",
      "required": [
        "perT",
        "perTe",
        "par1",
        "par2"
      ],
      "additionalProperties": false,
      "properties": {
        "perTe": {
          "type": "integer",
          "description": "Extended peripheral characteristic.",
          "minimum": 0,
          "maximum": 3
        },
        "perT": {
          "type": "integer",
          "description": "Peripheral type. If the peripheral is not supported or enabled, then PERIPHERAL_TYPE_DUMMY (0x00).",
          "minimum": 0,
          "maximum": 255
        },
        "par1": {
          "type": "integer",
          "description": "Optional peripheral specific information.",
          "minimum": 0,
          "maximum": 255
        },
        "par2": {
          "type": "integer",
          "description": "Optional peripheral specific information.",
          "minimum": 0,
          "maximum": 255
        }
      }
    }
  },
  "bonding": {
    "reqAddr": {
      "title": "Requested address",
      "description": "A requested address for the bonded node. The address must not be used (bonded) yet. If this parameter equals to 0, then the 1st free address is assigned to the node.",
      "type": "integer",
      "minimum": 0,
      "maximum": 239,
      "default": 0
    },
    "bondingTestRetries": {
      "title": "Bonding test retries",
      "description": "Maximum number of FRCs used to test whether the Node was successfully bonded. If value is 0, then no test is performed and the command always succeeds.",
      "type": "integer",
      "minimum": 0,
      "maximum": 255,
      "default": 0
    },
    "userData": {
      "title": "User data",
      "description": "Optional data passed to the bonded node. [Byte array]",
      "type": "array",
      "items": {
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "maxItems": 4,
      "default": [0,0,0,0]
    },
    "assignedAddr": {
      "description": "The address assigned to the node.",
      "type": "integer",
      "minimum": 1,
      "maximum": 255
    }
  },
  "os": {
    "trType": {
      "title": "TR & MCU type.",
      "description": "A byte value defining the TR and MCU types. For details see moduleInfo in IQRF OS Reference Guide.",
      "type": "integer",
      "minimum": 0,
      "maximum": 255
    },
    "flags": {
      "title": "Flags",
      "description": "A byte containing OS flags. For the meaning of individual bits see DPA Technical Guide.",
      "type": "integer",
      "minimum": 0,
      "maximum": 255
    },
    "slotLimits": {
      "title": "Timeslot limits",
      "description": "A byte specifying the timeslot limits. For details see DPA Technical Guide.",
      "type": "integer",
      "minimum": 0,
      "maximum": 255
    }
  },
  "embed": {
    "led": {
      "onOff": {
        "title": "LED status",
        "description": "LED ON/OFF status.",
        "type": "boolean"
      }
    }
  },
  "interoperability": {
    "frc": {
      "selectedNodes": {
        "title": "Selected nodes",
        "description": "Optional array of indexes of the selected nodes.",
        "type": "array",
        "items": {
          "type": "integer",
          "minimum": 1,
          "maximum": 239
        },
        "minItems": 0,
        "maxItems": 239,
        "uniqueItems": true
      },
      "getExtraResult": {
        "title": "Get extra result",
        "description": "If set Extra result DPA message is sent and processed.",
        "type": "boolean",
        "default": true
      },
      "extFormat": {
        "title": "Extended format",
        "description": "Return the data in the extended format.",
        "type": "boolean",
        "default": false
      },
      "hwpid": {
        "title": "HWPID",
        "description": "Hardware profile ID.",
        "oneOf": [
          { "type": "null" },
          {
            "type": "integer",
            "minimum": 0,
            "maximum": 65535
          }
        ]
      },
      "mid": {
        "title": "MID",
        "description": "Module ID.",
        "oneOf": [
          { "type": "null" },
          {
            "type": "integer",
            "minimum": 0,
            "maximum": 4294967295
          }
        ]
      },
      "metadata": {
        "description": "Arbitrary user defined meta data.",
        "oneOf": [
          { "type": "null" },
          { "type": "object" }
        ]
      }
    },
    "sensor": {
      "decimalPlaces": {
        "description": "Number of valid decimal places.",
        "type": "number"
      },
      "frcCommand": {
        "type": "integer",
        "description": "One of predefined standard sensor FRC commands. Use FRC commands available from Sensor enumeration.",
        "minimum": 0,
        "maximum": 255
      },
      "index": {
        "type": "integer",
        "description": "Index of the sensor. When the sensor type is specified, then its is an index among of all sensors of the specified type. Some FRC commands might use top 3 bits of this parameter for passing additional data.",
        "minimum": 0,
        "maximum": 255
      },
      "genericReadout": {
        "title": "Generic readout",
        "description": "Parsed generic sensor readout.",
        "items": {
          "type": "object",
          "additionalProperties": false,
          "properties": {
            "id": { "$ref": "#/interoperability/sensor/id" },
            "type": { "$ref": "#/interoperability/sensor/type" },
            "name": { "$ref": "#/interoperability/sensor/name" },
            "shortName": { "$ref": "#/interoperability/sensor/shortName" },
            "value": { "$ref": "#/interoperability/sensor/value" },
            "unit": { "$ref": "#/interoperability/sensor/unit" },
            "decimalPlaces": { "$ref": "#/interoperability/sensor/decimalPlaces" }
          }
        }
      },
      "id": {
        "title": "Sensor ID",
        "description": "Value type as text id.",
        "type": "string"
      },
      "indexes": {
        "title": "Sensor indexes",
        "description": "Indexes of requested sensors.",
        "oneOf": [
          { "type": "null" },
          { "type": "integer" },
          {
            "type": "array",
            "additionalItems": false,
            "uniqueItems": true,
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 31
            }
          }
        ]
      },
      "name": {
        "title": "Quantity name",
        "description": "Quantity measured by the sensor.",
        "type": "string"
      },
      "shortName": {
        "title": "Sensor short name",
        "description": "Short name of the sensor (quantity). Typically it is a symbol used at physics.",
        "type": "string"
      },
      "type": {
        "title": "Sensor type",
        "description": "Numerical value corresponding to sensor type and quantity.",
        "type": "integer",
        "minimum": 1,
        "maximum": 255
      },
      "unit": {
        "title": "Quantity unit",
        "description": "Unit in which the quantity is measured. Dimensionless quantities has \"\".",
        "type": "string"
      },
      "value": {
        "title": "Sensor value",
        "description": "Measured value of the sensor.",
        "oneOf": [
          { "type": "null" },
          { "type": "number" },
          {
            "type": "array",
            "items": {
              "type": "integer",
              "minimum": 0,
              "maximum": 255
            }
          }
        ]
      }
    },
    "light": {
      "ldiCommand": {
        "title": "LDI (DALI) command",
        "description": "2-byte LDI (DALI) commands in the standard YAAAAAAS+DDDDDDDD format.",
        "type": "integer",
        "minimum": 0,
        "maximum": 65535
      },
      "status": {
        "title": "Light (DALI) digital status",
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      },
      "value": {
        "title": "Light (DALI) digital value",
        "type": "integer",
        "minimum": 0,
        "maximum": 255
      }
    }
  },
  "iqmesh": {
    "repeat": {
      "title": "Repeat request",
      "description": "Number of repetitions of DPA messages.",
      "type": "integer",
      "default": 1
    },
    "nodesNr": {
      "title": "Node count",
      "description": "Number of nodes in the network.",
      "type": "integer",
      "minimum": 0,
      "maximum": 239
    },
    "inaccessibleNodesNr": {
      "title": "Inaccessible node count",
      "description": "Number of nodes that don't reply to FRC.",
      "type": "integer",
      "minimum": 0,
      "maximum": 239
    },
    "manufacturer": {
      "description": "Manufacturer name.",
      "type": "string"
    },
    "product": {
      "description": "Product name.",
      "type": "string"
    },
    "standards": {
      "description": "List of standards supported by the device.",
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "midStr": {
      "title": "TR Module ID",
      "type": "string"
    },
    "osVersion": {
      "description": "IQRF OS version.",
      "type": "string"
    },
    "osBuild": {
      "description": "IQRF OS build.",
      "type": "string"
    },
    "osFlags": {
      "description": "OS Flags, for detail see DPA Guide",
      "type": "object",
      "additionalProperties": false,
      "properties": {
        "value": {
          "$ref": "#/os/flags"
        },
        "insufficientOsBuild": {
          "description": "Flags.0 - Insufficient OsBuild. (DPA < 4.17)",
          "type": "boolean"
        },
        "insufficientOsVersion": {
          "description": "Flags.0 - Insufficient OsVersion. (DPA >= 4.17)",
          "type": "boolean"
        },
        "interfaceType": {
          "description": "Flags.1 - Interface type.",
          "type": "string"
        },
        "dpaHandlerDetected": {
          "description": "Flags.2 - Custom DPA handler was detected.",
          "type": "boolean"
        },
        "dpaHandlerNotDetectedButEnabled": {
          "description": "Flags.3 - Custom DPA Handler is not detected but enabled.",
          "type": "boolean"
        },
        "noInterfaceSupported": {
          "description": "Flags.4 - No interface supported.",
          "type": "boolean"
        },
        "iqrfOsChanged": {
          "description": "Flags.5 - IQRF OS is changed from the originally manufactured version.",
          "type": "boolean"
        },
        "frcAggregationEnabled": {
          "description": "Flags.6 - is 1 if the FRC Aggregation feature is enabled by the TR manufacturer.",
          "type": "boolean"
        }
      }
    },
    "dpaVerStr": {
      "description": "DPA version.",
      "type": "string"
    },
    "trMcuType": {
      "description": "Transciever module type and MCU",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/os/trType"
        },
        "trType": {
          "description": "TR module type.",
          "type": "string"
        },
        "fccCertified": {
          "description": "TR module is FCC certified.",
          "type": "boolean"
        },
        "mcuType": {
          "description": "TR module MCU type.",
          "type": "string"
        }
      }
    },
    "rssiStr": {
      "description": "See lastRSSI at IQRF OS Reference Guide.",
      "type": "string"
    },
    "supplyVoltageStr": {
      "description": "Module supply voltage",
      "type": "string"
    },
    "slotLimits": {
      "title": "Timeslot limits",
      "description": "For details see DPA Guide.",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/os/slotLimits"
        },
        "shortestTimeslot": {
          "description": "Shortest timeslot length in 10 ms units.",
          "type": "string"
        },
        "longestTimeslot": {
          "description": "Longest timeslot length in 10 ms units.",
          "type": "string"
        }
      }
    },
    "enumerationFlags": {
      "description": "Enumeration flags.",
      "type": "object",
      "properties": {
        "value": {
          "$ref": "#/explore/flags"
        },
        "rfModeStd": {
          "title": "STD-RX mode",
          "type": "boolean"
        },
        "rfModeLp": {
          "title": "LP-RX mode",
          "type": "boolean"
        },
        "stdAndLpNetwork": {
          "title": "STD+LP network",
          "type": "boolean"
        }
      }
    },
    "voltage": {
      "title": "Device voltage",
      "description": "Voltage of a network device.",
      "oneOf": [
        { "type": "null" },
        { "type": "number" }
      ]
    }
  },
  "sensorData": {
    "autoRun": {
      "title": "Run worker automatically",
      "description": "Start sensor data reading worker on startup.",
      "type": "boolean"
    },
    "period": {
      "title": "Reading period",
      "description": "Time between data reads in minutes.",
      "type": "integer",
      "minimum": 1
    },
    "retryPeriod": {
      "title": "Retry period",
      "description": "Time between reading retry after a failure.",
      "type": "integer",
      "minimum": 1
    },
    "asyncReports": {
      "title": "Asynchronous reports",
      "description": "Sends asynchronous messages reporting results when sensor read concludes.",
      "type": "boolean"
    },
    "messagingList": {
      "title": "Messaging instance list",
      "description": "List of messaging instances to use for asynchronous reporting.",
      "type": "array",
      "uniqueItems": true,
      "items": {
        "title": "Messaging instance",
        "description": "Messaging service instance.",
        "type": "object",
        "required": [
          "type",
          "instance"
        ],
        "additionalProperties": false,
        "properties": {
          "type": {
            "title": "Messaging type",
            "type": "string",
            "enum": ["mqtt", "ws"]
          },
          "instance": {
            "title": "Messaging instance name",
            "type": "string",
            "example": "default"
          }
        }
      }
    }
  }
}
