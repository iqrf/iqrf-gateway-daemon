{"version":0.00,"versionFlags":0,"driver":"//############################################################################################\r\n\r\n/* Title: Embedded IO peripheral driver\r\nSee also: <https://www.iqrf.org/DpaTechGuide/>\r\n*/\r\n\r\n/*DriverDescription\r\n{ 'ID' : 0x09,\r\n  'Type' : 'Standard',\r\n  'Internal' : false,\r\n  'Versions' : [\r\n    { 'Version' : 0, 'Notes' : [\r\n        'Initial release' ]\r\n    }\r\n  ] }\r\nDriverDescription*/\r\n\r\n\"use strict\";\r\n// Namespace: iqrf.embed.io\r\nnamespace( 'iqrf.embed.io' );\r\n\r\n// --------------\r\n/* Function: iqrf.embed.io.Direction_Request\r\nEncodes DPA request to set direction of IOs.\r\n\r\nParameters:\r\n  ports - attay: Array of objects with the following fields (see DPA documentation https://www.iqrf.org/DpaTechGuide for details):\r\n\r\n* port - number: \r\n* mask - number: \r\n* value - number:\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.io.Direction_Request = function ( ports )\r\n{\r\n  var data = '';\r\n  var ports_length = ports.length;\r\n  for ( var index = 0; index < ports_length; index++ )\r\n  {\r\n    if ( data.length !== 0 )\r\n      data += '.';\r\n\r\n    var onePort = ports[index];\r\n    data +=\r\n      iqrf.ToHexStringByte( onePort.port ) + '.' +\r\n      iqrf.ToHexStringByte( onePort.mask ) + '.' +\r\n      iqrf.ToHexStringByte( onePort.value );\r\n  }\r\n\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_IO, '00', data );\r\n};\r\n\r\n/* Function: iqrf.embed.io.Direction_Response\r\nDecodes DPA response from setting direction of IOs.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.io.Direction_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_IO, '80', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.io.Set_Request\r\nEncodes DPA request to set IOs.\r\n\r\nParameters:\r\n  ports - array: Array of objects with the following fields (see DPA documentation https://www.iqrf.org/DpaTechGuide for details):\r\n\r\n* port - number: \r\n* mask - number: \r\n* value - number: \r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.io.Set_Request = function ( ports )\r\n{\r\n  var data = '';\r\n  var ports_length = ports.length;\r\n  for ( var index = 0; index < ports_length; index++ )\r\n  {\r\n    if ( data.length !== 0 )\r\n      data += '.';\r\n\r\n    var onePort = ports[index];\r\n    data +=\r\n      iqrf.ToHexStringByte( onePort.port ) + '.' +\r\n      iqrf.ToHexStringByte( onePort.mask ) + '.' +\r\n      iqrf.ToHexStringByte( onePort.value );\r\n  }\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_IO, '01', data );\r\n};\r\n\r\n/* Function: iqrf.embed.io.Set_Response\r\nDecodes DPA response from setting IOs.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.io.Set_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_IO, '81', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.io.Get_Request\r\nEncodes DPA request to read the input state of all supported the MCU ports.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.io.Get_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_IO, '02' );\r\n};\r\n\r\n/* Function: iqrf.embed.io.Get_Response\r\nDecodes DPA response from reading the input state of all supported the MCU ports.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n\r\nReturns:\r\n  array: Ports values (see DPA documentation https://www.iqrf.org/DpaTechGuide for details).\r\n*/\r\niqrf.embed.io.Get_Response = function ( response )\r\n{\r\n  return iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_IO, '82', -5 );\r\n};\r\n\r\n//############################################################################################\r\n","notes":"Initial release","standardID":9,"name":"Embed: IO"}