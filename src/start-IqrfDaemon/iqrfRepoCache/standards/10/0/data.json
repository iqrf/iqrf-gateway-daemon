{"name": "Embed: Thermometer", "versionFlags": 0, "notes": "Initial release", "driver": "//############################################################################################\r\n\r\n/* Title: Embedded Thermometer peripheral driver\r\nSee also: <https://www.iqrf.org/DpaTechGuide/>\r\n*/\r\n\r\n/*DriverDescription\r\n{ 'ID' : 0x0A,\r\n  'Type' : 'Standard',\r\n  'Internal' : false,\r\n  'Versions' : [\r\n    { 'Version' : 0, 'Notes' : [\r\n        'Initial release',\r\n        ]\r\n    }\r\n  ] }\r\nDriverDescription*/\r\n\r\n\"use strict\";\r\n// Namespace: iqrf.embed.thermometer\r\nnamespace( 'iqrf.embed.thermometer' );\r\n\r\n/* Function: iqrf.embed.thermometer.Read_Request\r\nEncodes DPA request to read temperature.\r\n\r\nReturns:\r\n  iqrf.DpaRawHdpMessage: DPA request object.\r\n*/\r\niqrf.embed.thermometer.Read_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_Thermometer, '00' );\r\n};\r\n\r\n/* Function: iqrf.embed.thermometer.Read_Response\r\nDecodes DPA response from reading temperature.\r\n\r\nParameters:\r\n  response - iqrf.DpaRawHdpMessage: DPA response object.\r\n\r\nReturn:\r\n  number: Temperature value.\r\n*/\r\niqrf.embed.thermometer.Read_Response = function ( response )\r\n{\r\n  var responseData = iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_Thermometer, '80', 3 );\r\n  if ( responseData[0] === 0x80 )\r\n    throw new Error( 'iqrf.embed.thermometer.Read_Response: Temperature sensor missing' );\r\n\r\n  return ( responseData[1] + ( responseData[2] * 0x100 ) ) / 16.0;\r\n};\r\n\r\n//############################################################################################\r\n", "version": 0.0, "standardID": 10}