{"name": "Embed: OS", "versionFlags": 0, "notes": "Initial release", "driver": "// File_:   $RCSfile: 02_EmbedOS.js,v $\r\n// Version: $Revision: 1.17 $\r\n// Date:    $Date: 2018/02/02 19:47:56 $\r\n//############################################################################################\r\n\r\n/* Title: Embedded OS peripheral driver\r\nSee also: <https://www.iqrf.org/DpaTechGuide/>\r\n*/\r\n\r\n/*DriverDescription\r\n{ 'ID' : 0x02,\r\n  'Type' : 'Standard',\r\n  'Internal' : false,\r\n  'Versions' : [\r\n    { 'Version' : 0.00, 'Notes' : [\r\n        'Initial release',\r\n        ]\r\n    }\r\n  ] }\r\nDriverDescription*/\r\n\r\n\"use strict\";\r\n// Namespace: iqrf.embed.os\r\nnamespace( 'iqrf.embed.os' );\r\n\r\n/* Function: iqrf.embed.os.Read_Request\r\nEncodes DPA request to read OS.\r\n\r\nReturns:\r\n  string: DPA request string.  \r\n*/\r\niqrf.embed.os.Read_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '00' );\r\n};\r\n\r\n/* Function: iqrf.embed.os.Read_Response\r\nDecodes DPA response from reading OS.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n\r\nReturns:\r\n  object: Object with the following fields (see DPA documentation https://www.iqrf.org/DpaTechGuide/ for details):\r\n\r\n* mid - number: \r\n* osVersion - number: \r\n* trMcuType - number: \r\n* osBuild - number: \r\n* rssi - number: \r\n* supplyVoltage - number: contains real voltage value\r\n* flags - number: \r\n* slotLimits - number: \r\n*/\r\niqrf.embed.os.Read_Response = function ( response )\r\n{\r\n  var responseData = iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '80', 12 );\r\n\r\n  var result =\r\n    {\r\n      mid: responseData[0] + ( responseData[1] << 8 ) + ( responseData[2] << 16 ) + ( responseData[3] << 24 ),\r\n      osVersion: responseData[4],\r\n      trMcuType: responseData[5],\r\n      osBuild: responseData[6] + ( responseData[7] << 8 ),\r\n      rssi: responseData[8],\r\n      supplyVoltage: 261.12 / ( 127 - responseData[9] ),\r\n      flags: responseData[10],\r\n      slotLimits: responseData[11]\r\n    };\r\n\r\n  return result;\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.os.Reset_Request\r\nEncodes DPA request to reset.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.os.Reset_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '01' );\r\n};\r\n\r\n/* Function: iqrf.embed.os.Reset_Response\r\nDecodes DPA response from reset.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.os.Reset_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '81', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.os.ReadCfg_Request\r\nEncodes DPA request to read configuration.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.os.ReadCfg_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '02' );\r\n};\r\n\r\n/* Function: iqrf.embed.os.ReadCfg_Response\r\nDecodes DPA response from reading configuration.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n\r\nReturns:\r\n  object: Object with the following fields (see DPA documentation https://www.iqrf.org/DpaTechGuide for details):\r\n\r\n* checksum - number: \r\n* configuration - array: \r\n* rfpgm - number: \r\n* undocumented - number: \r\n*/\r\niqrf.embed.os.ReadCfg_Response = function ( response )\r\n{\r\n  var responseData = iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '82', 34 );\r\n\r\n  var result =\r\n    {\r\n      checksum: responseData[0],\r\n      configuration: responseData.slice( 1, 32 ),\r\n      rfpgm: responseData[32],\r\n      undocumented: responseData[33]\r\n    };\r\n\r\n  return result;\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.os.Rfpgm_Request\r\nEncodes DPA request to start RFPGM.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.os.Rfpgm_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '03' );\r\n};\r\n\r\n/* Function: iqrf.embed.os.Rfpgm_Response\r\nDecodes DPA response from starting RFPGM.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.os.Rfpgm_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '83', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.os.Sleep_Request\r\nEncodes DPA request to sleep.\r\n\r\nParameters:\r\n  time - number: See DPA documentation https://www.iqrf.org/DpaTechGuide for details.\r\n  control - number: See DPA documentation https://www.iqrf.org/DpaTechGuide for details.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.os.Sleep_Request = function ( time, control )\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '04', iqrf.IntToHexStringBytesArray( time, 2 ) + '.' + iqrf.ToHexStringByte( control ) );\r\n};\r\n\r\n/* Function: iqrf.embed.os.Sleep_Response\r\nDecodes DPA response from sleeping.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.os.Sleep_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '84', 0 );\r\n};\r\n\r\niqrf.embed.os.Batch_ConstructRequests = function ( requests )\r\n{\r\n  var data = '';\r\n  var requests_length = requests.length;\r\n  for ( var index = 0; index < requests_length; index++ )\r\n  {\r\n    var oneRequest = requests[index];\r\n    var hwpid = parseInt( oneRequest.hwpid, 16 );\r\n    var oneData =\r\n      iqrf.NormalizeStringByte( oneRequest.pnum ) + '.' +\r\n      iqrf.NormalizeStringByte( oneRequest.pcmd ) + '.' +\r\n      iqrf.ToHexStringByte( hwpid & 0xFF ) + '.' +\r\n      iqrf.ToHexStringByte( hwpid >> 8 );\r\n\r\n    if ( oneRequest.rdata !== undefined )\r\n      oneData += '.' + iqrf.BytesToHexStringBytesArray( iqrf.ParseStringBytes( oneRequest.rdata ) );\r\n\r\n    oneData = iqrf.ToHexStringByte( 1 + ( 1 + oneData.length ) / 3 ) + '.' + oneData;\r\n\r\n    if ( data.length !== 0 )\r\n      data += '.';\r\n    data += oneData;\r\n  }\r\n\r\n  return data + '.00';\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.os.Batch_Request\r\nEncodes DPA request to execute a batch.\r\n\r\nParameters:\r\n  requests - array: Array of objects (requests) created by other ?_Request functions.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.os.Batch_Request = function ( requests )\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '05', iqrf.embed.os.Batch_ConstructRequests( requests ) );\r\n};\r\n\r\n/* Function: iqrf.embed.os.Batch_Response\r\nDecodes DPA response from executing a batch.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.os.Batch_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '85', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.os.SetSecurity_Request\r\nEncodes DPA request to set various security parameters.\r\n\r\nParameters:\r\n  type - number: see DPA documentation https://www.iqrf.org/DpaTechGuide for details.\r\n  data - array: see DPA documentation https://www.iqrf.org/DpaTechGuide for details. \r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.os.SetSecurity_Request = function ( type, data )\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '06', iqrf.ToHexStringByte( type ) + iqrf.BytesToHexStringBytesArray( data, true ) );\r\n};\r\n\r\n/* Function: iqrf.embed.os.SetSecurity_Response\r\nDecodes DPA response from setting various security parameters.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.os.SetSecurity_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '86', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.os.Restart_Request\r\nEncodes DPA request to restart device.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.os.Restart_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '08' );\r\n};\r\n\r\n/* Function: iqrf.embed.os.Restart_Response\r\nDecodes DPA response from restarting device.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.os.Restart_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '88', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.os.WriteCfgByte_Request\r\nEncodes DPA request to write configuration bytes.\r\n\r\nParameters:\r\n  bytes - array: Array of objects with the following fields (see DPA documentation https://www.iqrf.org/DpaTechGuide for details):\r\n\r\n* address - number: \r\n* value - number: \r\n* mask - number: \r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.os.WriteCfgByte_Request = function ( bytes )\r\n{\r\n  var data = '';\r\n  var bytes_length = bytes.length;\r\n  for ( var index = 0; index < bytes_length; index++ )\r\n  {\r\n    if ( data.length !== 0 )\r\n      data += '.';\r\n\r\n    var oneByte = bytes[index];\r\n    data +=\r\n      iqrf.ToHexStringByte( oneByte.address ) + '.' +\r\n      iqrf.ToHexStringByte( oneByte.value ) + '.' +\r\n      iqrf.ToHexStringByte( oneByte.mask );\r\n  }\r\n\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '09', data );\r\n};\r\n\r\n/* Function: iqrf.embed.os.WriteCfgByte_Response\r\nDecodes DPA response from writing configuration bytes.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.os.WriteCfgByte_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '89', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.os.LoadCode_Request\r\nEncodes DPA request to load code.\r\n\r\nParameters:\r\n  flags - number: see DPA documentation https://www.iqrf.org/DpaTechGuide for details.\r\n  address - number: see DPA documentation https://www.iqrf.org/DpaTechGuide for details.\r\n  length - number: see DPA documentation https://www.iqrf.org/DpaTechGuide for details.\r\n  checkSum - number: see DPA documentation https://www.iqrf.org/DpaTechGuide for details.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.os.LoadCode_Request = function ( flags, address, length, checkSum )\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '0A',\r\n    iqrf.ToHexStringByte( flags ) + '.' +\r\n    iqrf.IntToHexStringBytesArray( address, 2 ) + '.' +\r\n    iqrf.IntToHexStringBytesArray( length, 2 ) + '.' +\r\n    iqrf.IntToHexStringBytesArray( checkSum, 2 ) );\r\n};\r\n\r\n/* Function: iqrf.embed.os.LoadCode_Response\r\nDecodes DPA response from loading code.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n\r\nReturns:\r\n  number: Loading code result value.\r\n*/\r\niqrf.embed.os.LoadCode_Response = function ( response )\r\n{\r\n  var responseData = iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '8A', 1 );\r\n  return responseData[0];\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.os.SelectiveBatch_Request\r\nEncodes DPA request to execute a selective batch.\r\n\r\nParameters:\r\n  selectedNodes - array: Array if integer values corresponding to the selected nodes.\r\n  requests - array: Array of objects (requests) created by other ?_Request functions.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.os.SelectiveBatch_Request = function ( selectedNodes, requests )\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '0B',\r\n    iqrf.BytesToHexStringBytesArray( iqrf.IndexesToBitmap( selectedNodes, 30 ) ) + '.' + iqrf.embed.os.Batch_ConstructRequests( requests ) );\r\n};\r\n\r\n/* Function: iqrf.embed.os.SelectiveBatch_Response\r\nDecodes DPA response from executing a selective batch.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.os.SelectiveBatch_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '8B', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.os.WriteCfg_Request\r\nEncodes DPA request to write configuration.\r\n\r\nParameters:\r\n  checksum - number: see DPA documentation https://www.iqrf.org/DpaTechGuide for details.\r\n  configuration - array: see DPA documentation https://www.iqrf.org/DpaTechGuide for details.\r\n  rfpgm - number: see DPA documentation https://www.iqrf.org/DpaTechGuide for details.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.os.WriteCfg_Request = function ( checksum, configuration, rfpgm )\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_OS, '0F', iqrf.ToHexStringByte( checksum ) + iqrf.BytesToHexStringBytesArray( configuration, true ) + '.' + iqrf.ToHexStringByte( rfpgm ) );\r\n};\r\n\r\n/* Function: iqrf.embed.os.WriteCfg_Response\r\nDecodes DPA response from writing configuration.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.os.WriteCfg_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_OS, '8F', 0 );\r\n};\r\n\r\n//############################################################################################\r\n", "version": 0.0, "standardID": 2}