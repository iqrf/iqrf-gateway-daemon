{"driver": "// File_:   $RCSfile: 01_EmbedNode.js,v $\r\n// Version: $Revision: 1.19 $\r\n// Date:    $Date: 2018/10/18 09:13:39 $\r\n//############################################################################################\r\n\r\n/* Title: Embedded Node peripheral driver\r\nSee also: <https://www.iqrf.org/DpaTechGuide/>\r\n*/\r\n\r\n/*DriverDescription\r\n{ 'ID' : 0x01,\r\n  'Type' : 'Standard',\r\n  'Internal' : false,\r\n  'Versions' : [\r\n    { 'Version' : 0, 'Notes' : [\r\n        'Initial release',\r\n        ]\r\n    }\r\n  ] }\r\nDriverDescription*/\r\n\r\n\"use strict\";\r\n// Namespace: iqrf.embed.node\r\nnamespace( 'iqrf.embed.node' );\r\n\r\n// --------------\r\n/* Function: iqrf.embed.node.Read_Request\r\nEncodes DPA request to read Node information.\r\n\r\nReturns:\r\n  string: DPA request string.  \r\n*/\r\niqrf.embed.node.Read_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_Node, '00' );\r\n};\r\n\r\n/* Function: iqrf.embed.node.Read_Response\r\nDecodes DPA response from reading Node information.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n\r\nReturns:\r\n  object: Object with the following fields (see DPA documentation https://www.iqrf.org/DpaTechGuide/start.htm#_Read for details):\r\n\r\n* ntwADDR - number: \r\n* ntwVRN - number: \r\n* ntwZIN - number:  \r\n* ntwDID - number: \r\n* ntwPVRN - number: \r\n* ntwUSERADDRESS - number: \r\n* ntwID - number: \r\n* ntwVRNFNZ - number: \r\n* ntwCFG - number: \r\n* flags - number: \r\n*/\r\niqrf.embed.node.Read_Response = function ( response )\r\n{\r\n  var responseData = iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_Node, '80', 12 );\r\n\r\n  var result =\r\n  {\r\n    ntwADDR: responseData[0],\r\n    ntwVRN: responseData[1],\r\n    ntwZIN: responseData[2],\r\n    ntwDID: responseData[3],\r\n    ntwPVRN: responseData[4],\r\n    ntwUSERADDRESS: responseData[5] + ( responseData[6] * 0x100 ),\r\n    ntwID: responseData[7] + ( responseData[8] * 0x100 ),\r\n    ntwVRNFNZ: responseData[9],\r\n    ntwCFG: responseData[10],\r\n    flags: responseData[11]\r\n  };\r\n\r\n  return result;\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.node.RemoveBond_Request\r\nEncodes DPA request to remove bond.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.node.RemoveBond_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_Node, '01' );\r\n};\r\n\r\n/* Function: iqrf.embed.node.RemoveBond_Response\r\nDecodes DPA response from removing bond.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.node.RemoveBond_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_Node, '81', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.node.ReadRemotelyBondedMid_Request\r\nEncodes DPA request to read remotely bonded nodes.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.node.ReadRemotelyBondedMid_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_Node, '02' );\r\n};\r\n\r\n/* Function: iqrf.embed.node.ReadRemotelyBondedMid_Response\r\nDecodes DPA response from reading remotely bonded nodes.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n\r\nReturns:\r\n  array: Array of objects for every prebonded node. The object has the following fields:\r\n\r\n* mid - number: Prebonded mid.\r\n* userData - array: Array of 4 bytes with user data.\r\n*/\r\niqrf.embed.node.ReadRemotelyBondedMid_Response = function ( response )\r\n{\r\n  var responseData = iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_Node, '82' );\r\n\r\n  var result = [];\r\n  var responseData_length = responseData.length;\r\n  for ( var index = 0; index < responseData_length; index += 8 )\r\n  {\r\n    result[result.length] =\r\n      {\r\n        mid: responseData[index] + ( responseData[index + 1] * 0x100 ) + ( responseData[index + 2] * 0x10000 ) + ( responseData[index + 3] * 0x1000000 ),\r\n        userData: [responseData[index + 4], responseData[index + 5], responseData[index + 6], responseData[index + 7]]\r\n      };\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.node.ClearRemotelyBondedMid_Request\r\nEncodes DPA request to clear list of remotely bonded nodes.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.node.ClearRemotelyBondedMid_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_Node, '03' );\r\n};\r\n\r\n/* Function: iqrf.embed.node.ClearRemotelyBondedMid_Response\r\nDecodes DPA response from clearing list of remotely bonded nodes.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.node.ClearRemotelyBondedMid_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_Node, '83', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.node.EnableRemoteBonding_Request\r\nEncodes DPA request to enable remote bonding.\r\n\r\nParameters:\r\n  bondingMask - number: see DPA technical documentation.\r\n  control - number: see DPA technical documentation.\r\n  userData - array: Array of 4 bytes, see DPA technical documentation.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.node.EnableRemoteBonding_Request = function ( bondingMask, control, userData )\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_Node, '04',\r\n    iqrf.ToHexStringByte( bondingMask ) + '.' + iqrf.ToHexStringByte( control ) + iqrf.BytesToHexStringBytesArray( userData, true ) );\r\n};\r\n\r\n/* Function: iqrf.embed.node.EnableRemoteBonding_Response\r\nDecodes DPA response from enabling remote bonding.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.node.EnableRemoteBonding_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_Node, '84', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.node.RemoveBondAddress_Request\r\nEncodes DPA request to remove bond address.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.node.RemoveBondAddress_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_Node, '05' );\r\n};\r\n\r\n/* Function: iqrf.embed.node.RemoveBondAddress_Response\r\nDecodes DPA response from removing bond address.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.node.RemoveBondAddress_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_Node, '85', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.node.Backup_Request\r\nEncodes DPA request to backup node.\r\n\r\nParameters:\r\n  index - number: Index of the block of data.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.node.Backup_Request = function ( index )\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_Node, '06', iqrf.ToHexStringByte( index ) );\r\n};\r\n\r\n/* Function: iqrf.embed.node.Backup_Response\r\nDecodes DPA response from backing up node.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n\r\nReturns:\r\n  array: Array of bytes with the backup content.\r\n*/\r\niqrf.embed.node.Backup_Response = function ( response )\r\n{\r\n  return iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_Node, '86', 49 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.node.Restore_Request\r\nEncodes DPA request to restore node.\r\n\r\nParameters:\r\n  networkData - array: One block of the coordinator network info data previously obtained by a backup command.  \r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.node.Restore_Request = function ( networkData )\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_Node, '07', iqrf.BytesToHexStringBytesArray( networkData ) );\r\n};\r\n\r\n/* Function: iqrf.embed.node.Restore_Response\r\nDecodes DPA response from restoring node.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.node.Restore_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_Node, '87', 0 );\r\n};\r\n\r\n// --------------\r\n/* Function: iqrf.embed.node.ValidateBonds_Request\r\nEncodes DPA request to validate bonds.\r\n\r\nParameters:\r\n  nodes - array: Array of objects with the following fields (see DPA documentation https://www.iqrf.org/DpaTechGuide for details):\r\n\r\n*  bondAddr - number: Address of the node to validate.\r\n*  mid - number: MID to check against.\r\n\r\nReturns:\r\n  string: DPA request string.\r\n*/\r\niqrf.embed.node.ValidateBonds_Request = function ( nodes )\r\n{\r\n  var data = '';\r\n  var nodes_length = nodes.length;\r\n  for ( var index = 0; index < nodes_length; index++ )\r\n  {\r\n    var oneNode = nodes[index];\r\n    data += iqrf.ToHexStringByte( oneNode.bondAddr ) + '.' + iqrf.IntToHexStringBytesArray( oneNode.mid, 4 );\r\n  }\r\n\r\n  return new iqrf.DpaRawHdpMessage( iqrf.PNUM_Node, '08', data );\r\n};\r\n\r\n/* Function: iqrf.embed.node.ValidateBonds_Response\r\nDecodes DPA response from validating bonds.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n*/\r\niqrf.embed.node.ValidateBonds_Response = function ( response )\r\n{\r\n  iqrf.CheckResponsePnumPcmdDlen( response, iqrf.PNUM_Node, '88', 0 );\r\n};\r\n\r\n\r\n//############################################################################################\r\n", "name": "Embed: Node", "notes": "Initial release", "standardID": 1, "version": 0.0, "versionFlags": 0}