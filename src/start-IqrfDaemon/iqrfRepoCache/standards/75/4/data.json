{"version":4.00,"versionFlags":0,"driver":"//############################################################################################\r\n\r\n/* Title: IQRF Standards Binary Output driver\r\nSee also: <https://www.iqrfalliance.org/techDocs/>\r\n*/\r\n\r\n/*DriverDescription\r\n{ 'ID' : 0x4B,\r\n  'Type' : 'Standard',\r\n  'Internal' : false,\r\n  'Versions' : [\r\n    { 'Version' : 4, 'Notes' : [\r\n        'Initial release' ]\r\n    }\r\n  ] }\r\nDriverDescription*/\r\n\r\n\"use strict\";\r\n// Namespace: iqrf.binaryoutput\r\nnamespace( 'iqrf.binaryoutput' );\r\n\r\n// IQRF Standards Binary Output PNUM value\r\niqrf.binaryoutput.PNUM = '4b';\r\n\r\n/* Function: iqrf.binaryoutput.Enumerate_Request\r\nEncodes DPA request to enumerate binary outputs.\r\n\r\nReturns:\r\n  string: DPA request string.  \r\n*/\r\niqrf.binaryoutput.Enumerate_Request = function ()\r\n{\r\n  return new iqrf.DpaRawHdpMessage( iqrf.binaryoutput.PNUM, '3e' );\r\n};\r\n\r\n/* Function: iqrf.binaryoutput.Enumerate_Response\r\nDecodes DPA response from binary outputs enumeration.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n\r\nReturns:\r\n  number: Number of implemented binary outputs.\r\n*/\r\niqrf.binaryoutput.Enumerate_Response = function ( response )\r\n{\r\n  var responseData = iqrf.CheckResponsePnumPcmdDlen( response, iqrf.binaryoutput.PNUM, 'be', 1 );\r\n  return responseData[0];\r\n};\r\n\r\n/* Function: iqrf.binaryoutput.SetOutput_Request\r\nEncodes DPA request to set binary outputs.\r\n\r\nParameters:\r\n  outputs - array: Array of objects with the following fields (see DPA documentation https://www.iqrf.org/DpaTechGuide for details):\r\n\r\n* index - number: Zero based index of the output to set.\r\n* state - boolean: true to set ON state, false to set OFF state. \r\n* time - number: [optional] If state is true, then time in seconds to keep the output at ON state. Allowed values are <1;127> or 60*<1;127>.\r\n\r\nReturns:\r\n  string: DPA request string.  \r\n*/\r\niqrf.binaryoutput.SetOutput_Request = function ( outputs )\r\n{\r\n  var bitmap = 0x0000;\r\n  var data = '';\r\n  var outputs_length = outputs.length;\r\n  for ( var index = 0; index < outputs_length; index++ )\r\n  {\r\n    var oneOutput = outputs[index];\r\n    bitmap |= 1 << oneOutput.index;\r\n\r\n    var oneData;\r\n    if ( oneOutput.state === true )\r\n    {\r\n      if ( oneOutput.time === undefined )\r\n        oneData = 1;\r\n      else\r\n      {\r\n        if ( oneOutput.time >= 1 && oneOutput.time <= 127 )\r\n          oneData = oneOutput.time | 0x80;\r\n        else\r\n        {\r\n          var minutes = Math.floor( oneOutput.time / 60 );\r\n          if ( oneOutput.time % 60 !== 0 || minutes < 2 || minutes > 127 )\r\n            throw new Error( 'iqrf.binaryoutput.SetOutput_Request: Invalid time ' + oneOutput.time + ' specified for the output ' + oneOutput.index );\r\n\r\n          oneData = minutes;\r\n        }\r\n      }\r\n    }\r\n    else\r\n    {\r\n      if ( oneOutput.state !== false )\r\n        throw new Error( 'iqrf.binaryoutput.SetOutput_Request: Invalid state ' + oneOutput.state + ' specified for the output ' + oneOutput.index );\r\n\r\n      if ( oneOutput.time !== undefined )\r\n        throw new Error( 'iqrf.binaryoutput.SetOutput_Request: Time ' + oneOutput.time + ' specified but the output ' + oneOutput.index + ' is not to be set' );\r\n\r\n      oneData = 0;\r\n    }\r\n\r\n    data += '.' + iqrf.ToHexStringByte( oneData );\r\n  }\r\n\r\n  return new iqrf.DpaRawHdpMessage( iqrf.binaryoutput.PNUM, '00', iqrf.IntToHexStringBytesArray( bitmap, 4 ) + data );\r\n};\r\n\r\n/* Function: iqrf.binaryoutput.SetOutput_Response\r\nDecodes DPA response from setting binary outputs.\r\n\r\nParameters:\r\n  response - string: DPA response string.\r\n\r\nReturns:\r\n  array: Array of boolean true/false values specifying the previous state of each binary output. false is returned for unimplemented binary outputs.\r\n*/\r\niqrf.binaryoutput.SetOutput_Response = function ( response )\r\n{\r\n  var responseData = iqrf.CheckResponsePnumPcmdDlen( response, iqrf.binaryoutput.PNUM, '80', 4 );\r\n  var bitmap = responseData[0] + ( responseData[1] * 0x100 ) + ( responseData[2] * 0x10000 ) + ( responseData[3] * 0x1000000 );\r\n\r\n  var result = [];\r\n  for ( var index = 0; index < 32; index++ )\r\n    result[index] = ( bitmap & ( 1 << index ) ) !== 0;\r\n\r\n  return result;\r\n};\r\n\r\n//############################################################################################\r\n","notes":"Initial release","standardID":75,"name":"IQRF: Binary Output"}