[{"id":"a9ae6f54.c2d37","type":"tab","label":"GlobalSetting","disabled":false,"info":""},{"id":"8847ffec.bee27","type":"tab","label":"Raw","disabled":true,"info":""},{"id":"a81422ed.903dd","type":"tab","label":"iqrfSensor","disabled":true,"info":""},{"id":"445463df.bb7f9c","type":"tab","label":"iqrfBO","disabled":true,"info":""},{"id":"83d8485.e4c1ab8","type":"tab","label":"iqrfLight","disabled":true,"info":""},{"id":"bc9e35c5.53b6d8","type":"tab","label":"EmbedLedr","disabled":true,"info":""},{"id":"c695b31.e6fd15","type":"tab","label":"EmbedLedg","disabled":true,"info":""},{"id":"1cc78240.6527ae","type":"tab","label":"EmbedThermometer","disabled":true,"info":""},{"id":"2237b788.d6d558","type":"tab","label":"iqmeshNetwork","disabled":false,"info":""},{"id":"93b69e15.901c7","type":"mqtt-broker","z":"","name":"iqrf","broker":"192.168.2.105","port":"1883","clientid":"","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"willTopic":"","willQos":"0","willPayload":"","birthTopic":"","birthQos":"0","birthPayload":""},{"id":"a8bc67cc.6fd248","type":"websocket-client","z":"","path":"ws://192.168.2.105:1338","tls":"","wholemsg":"false"},{"id":"81e65fd3.de094","type":"mqtt in","z":"bc9e35c5.53b6d8","name":"DpaResponse","topic":"Iqrf/DpaResponse","qos":"2","broker":"93b69e15.901c7","x":86.00006103515625,"y":677.0001831054688,"wires":[["6939dea7.d9b01","db003aa4.e726b8"]]},{"id":"caf4074.7d713f8","type":"mqtt out","z":"bc9e35c5.53b6d8","name":"DpaRequest","topic":"Iqrf/DpaRequest","qos":"","retain":"","broker":"93b69e15.901c7","x":1243.0000305175781,"y":263.00000762939453,"wires":[]},{"id":"6a340b79.d1da34","type":"debug","z":"bc9e35c5.53b6d8","name":"ValidatorRsp","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":884.0000457763672,"y":570.0001173019409,"wires":[]},{"id":"8af40b27.7abbc8","type":"json-schema-validator","z":"bc9e35c5.53b6d8","name":"iqrfEmbedLedr_Pulse-response","func":"{\n    \"title\": \"iqrfEmbedLedr_Pulse-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledg - Pulse response.\",\n            \"enum\": [\n                \"iqrfEmbedLedr_Pulse\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":596.0000915527344,"y":662.0002059936523,"wires":[["6a340b79.d1da34","80042f1a.6b80c"]]},{"id":"1cc61b6d.5d33e5","type":"json-schema-validator","z":"bc9e35c5.53b6d8","name":"iqrfEmbedLedr_Pulse-request","func":"{\n    \"title\": \"iqrfEmbedLedr_Pulse-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledr - Pulse request.\",\n            \"enum\": [\n                \"iqrfEmbedLedr_Pulse\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":705,"y":120,"wires":[["e75de805.af4ac8","fc7d0ee1.605b6"]]},{"id":"e75de805.af4ac8","type":"debug","z":"bc9e35c5.53b6d8","name":"ValidatorReq","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1030.0001106262207,"y":70.00000190734863,"wires":[]},{"id":"6939dea7.d9b01","type":"json","z":"bc9e35c5.53b6d8","name":"","property":"payload","action":"","pretty":false,"x":244.0000457763672,"y":772.0001859664917,"wires":[["1e0194fd.dfe78b","4d13713c.fc70d"]]},{"id":"fc7d0ee1.605b6","type":"switch","z":"bc9e35c5.53b6d8","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1039.0001106262207,"y":187.00000476837158,"wires":[[],["5640158d.9339cc","323bcb9d.d5e474"]]},{"id":"d00ac96e.7e7a28","type":"switch","z":"bc9e35c5.53b6d8","name":"status","property":"payload.data.status","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"neq","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1022.0000457763672,"y":792.0001173019409,"wires":[[],[]]},{"id":"1e0194fd.dfe78b","type":"switch","z":"bc9e35c5.53b6d8","name":"mType","property":"payload.mType","propertyType":"msg","rules":[{"t":"eq","v":"iqrfEmbedLedr_Pulse","vt":"str"},{"t":"eq","v":"iqrfEmbedLedr_Set","vt":"str"},{"t":"eq","v":"iqrfEmbedLedr_Get","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":394.00008392333984,"y":755.0002088546753,"wires":[["8af40b27.7abbc8"],["adc152a3.49ef8"],["e2967b22.947958"]]},{"id":"a990375.19d86c8","type":"function","z":"bc9e35c5.53b6d8","name":"count","func":"value = flow.get('count') || 0\n\nvalue++\nif(value > 3)\n    value = 0\n\nflow.set('count', value)\nreturn { payload : value };\n","outputs":1,"noerr":0,"x":150.0000343322754,"y":167.00000476837158,"wires":[["18a841d3.5440de","ecbb071e.fa65e8","e46ff723.afc968"]]},{"id":"18a841d3.5440de","type":"function","z":"bc9e35c5.53b6d8","name":"iqrfEmbedLedr_Pulse","func":"var req = \n{\n    \"mType\":\"iqrfEmbedLedr_Pulse\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": flow.get('count'),\n            \"hwpId\":65535,\n            \"param\": {}\n            \n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":400.0000114440918,"y":140.0000228881836,"wires":[["1cc61b6d.5d33e5"]]},{"id":"80042f1a.6b80c","type":"switch","z":"bc9e35c5.53b6d8","name":"Valid","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":904.0000686645508,"y":692.0001344680786,"wires":[[],["d00ac96e.7e7a28"]]},{"id":"38bea320.f07f7c","type":"inject","z":"bc9e35c5.53b6d8","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":115,"y":69,"wires":[["a990375.19d86c8"]]},{"id":"44e9e2b1.02968c","type":"catch","z":"bc9e35c5.53b6d8","name":"Invalid Rsp","scope":["8af40b27.7abbc8"],"x":621.0000610351562,"y":598.0001316070557,"wires":[["6a340b79.d1da34"]]},{"id":"4d13713c.fc70d","type":"file","z":"bc9e35c5.53b6d8","name":"embedLedrApiTest","filename":"/home/spinarr/iqrf/embedLedrApiTest.txt","appendNewline":true,"createDir":true,"overwriteFile":"false","x":286.0000457763672,"y":895.0001173019409,"wires":[]},{"id":"ae34c646.4da028","type":"function","z":"bc9e35c5.53b6d8","name":"iqrfEmbedLedr_Get","func":"var req = \n{\n    \"mType\":\"iqrfEmbedLedr_Get\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": flow.get('count'),\n            \"hwpId\":65535,\n            \"param\":{}\n            \n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":466.0000534057617,"y":350.0000114440918,"wires":[["4d8c0efa.080af"]]},{"id":"ecbb071e.fa65e8","type":"delay","z":"bc9e35c5.53b6d8","name":"","pauseType":"delay","timeout":"6","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":203.0000457763672,"y":381.0000114440918,"wires":[["ae34c646.4da028"]]},{"id":"4d8c0efa.080af","type":"json-schema-validator","z":"bc9e35c5.53b6d8","name":"iqrfEmbedLedr_Get-request","func":"{\n    \"title\": \"iqrfEmbedLedr_Get-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledr - Get request.\",\n            \"enum\": [\n                \"iqrfEmbedLedr_Get\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":765.0000228881836,"y":319.00000953674316,"wires":[["e75de805.af4ac8","fc7d0ee1.605b6"]]},{"id":"e2967b22.947958","type":"json-schema-validator","z":"bc9e35c5.53b6d8","name":"iqrfEmbedLedr_Get-response","func":"{\n    \"title\": \"iqrfEmbedLedr_Get-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledr - Get response.\",\n            \"enum\": [\n                \"iqrfEmbedLedr_Get\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"onOff\": {\n                                    \"type\": \"boolean\",\n                                    \"description\": \"LED status.\"\n                                }\n                            }\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":676.0001373291016,"y":912.0001907348633,"wires":[["6a340b79.d1da34","80042f1a.6b80c"]]},{"id":"8583138b.0fa22","type":"status","z":"bc9e35c5.53b6d8","name":"","scope":["d00ac96e.7e7a28"],"x":1089.000072479248,"y":860.0001382827759,"wires":[[]]},{"id":"57162ea1.f8414","type":"function","z":"bc9e35c5.53b6d8","name":"iqrfEmbedLedr_Set","func":"var req = \n{\n    \"mType\":\"iqrfEmbedLedr_Set\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\":flow.get('count'),\n            \"hwpId\":65535,\n            \"param\": {\n                \"onOff\":true\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":453.0000915527344,"y":235.0000877380371,"wires":[["41af63a.17fa69c"]]},{"id":"e46ff723.afc968","type":"delay","z":"bc9e35c5.53b6d8","name":"","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":270.00008392333984,"y":289.00004863739014,"wires":[["57162ea1.f8414"]]},{"id":"41af63a.17fa69c","type":"json-schema-validator","z":"bc9e35c5.53b6d8","name":"iqrfEmbedLedr_Set-request","func":"{\n    \"title\": \"iqrfEmbedLedr_Set-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledr - Set request.\",\n            \"enum\": [\n                \"iqrfEmbedLedr_Set\"            \n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                       \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"onOff\": {\n                                    \"type\": \"boolean\",\n                                    \"description\": \"Turns on/off LED.\"\n                                }\n                            }\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":726.0000228881836,"y":219.0000057220459,"wires":[["e75de805.af4ac8","fc7d0ee1.605b6"]]},{"id":"adc152a3.49ef8","type":"json-schema-validator","z":"bc9e35c5.53b6d8","name":"iqrfEmbedLedr_Set-response","func":"{\n    \"title\": \"iqrfEmbedLedr_Set-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledr - Set response.\",\n            \"enum\": [\n                \"iqrfEmbedLedr_Set\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":635.0000991821289,"y":777.6668529510498,"wires":[["6a340b79.d1da34","80042f1a.6b80c"]]},{"id":"431af747.f9fa98","type":"mqtt in","z":"c695b31.e6fd15","name":"DpaResponse","topic":"Iqrf/DpaResponse","qos":"2","broker":"93b69e15.901c7","x":154.00002670288086,"y":705.0001831054688,"wires":[["1222c6e3.c55969","438ec5c3.ff9b5c"]]},{"id":"2101e935.25e6f6","type":"mqtt out","z":"c695b31.e6fd15","name":"DpaRequest","topic":"Iqrf/DpaRequest","qos":"","retain":"","broker":"93b69e15.901c7","x":1188.9999732971191,"y":253.00000143051147,"wires":[]},{"id":"67f24673.d4f548","type":"debug","z":"c695b31.e6fd15","name":"ValidatorRsp","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":960.9999923706055,"y":566.0001173019409,"wires":[]},{"id":"9f2707af.188678","type":"json-schema-validator","z":"c695b31.e6fd15","name":"iqrfEmbedLedg_Pulse-response","func":"{\n    \"title\": \"iqrfEmbedLedg_Pulse-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledg - Pulse response.\",\n            \"enum\": [\n                \"iqrfEmbedLedg_Pulse\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":673.0000381469727,"y":658.0002059936523,"wires":[["67f24673.d4f548","eaeebb7e.f57a48"]]},{"id":"29c88211.3334de","type":"json-schema-validator","z":"c695b31.e6fd15","name":"iqrfEmbedLedg_Pulse-request","func":"{\n    \"title\": \"iqrfEmbedLedg_Pulse-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledg - Pulse request.\",\n            \"enum\": [\n                \"iqrfEmbedLedg_Pulse\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":702.999942779541,"y":126,"wires":[["8c4f5bf9.9d2138","2c906afd.75adf6"]]},{"id":"8c4f5bf9.9d2138","type":"debug","z":"c695b31.e6fd15","name":"ValidatorReq","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1043.9999732971191,"y":77.00000143051147,"wires":[]},{"id":"1222c6e3.c55969","type":"json","z":"c695b31.e6fd15","name":"","property":"payload","action":"","pretty":false,"x":329.99999237060547,"y":797.0001173019409,"wires":[["c1f146c5.2a98c8","dc18f571.5ca4c8"]]},{"id":"2c906afd.75adf6","type":"switch","z":"c695b31.e6fd15","name":"Valid","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1061.0000305175781,"y":173.0000057220459,"wires":[[],["2f873bd2.1cb6b4","447c4293.31fbec"]]},{"id":"cc842165.0cf55","type":"switch","z":"c695b31.e6fd15","name":"status","property":"payload.data.status","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"neq","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1098.9999923706055,"y":788.0001173019409,"wires":[[],[]]},{"id":"c1f146c5.2a98c8","type":"switch","z":"c695b31.e6fd15","name":"mType","property":"payload.mType","propertyType":"msg","rules":[{"t":"eq","v":"iqrfEmbedLedg_Pulse","vt":"str"},{"t":"eq","v":"iqrfEmbedLedg_Set","vt":"str"},{"t":"eq","v":"iqrfEmbedLedg_Get","vt":"str"}],"checkall":"true","repair":false,"outputs":3,"x":471.0000305175781,"y":751.0002088546753,"wires":[["9f2707af.188678"],["6c2cc766.198328"],["bac5245c.b3c118"]]},{"id":"80941cf5.89343","type":"function","z":"c695b31.e6fd15","name":"count","func":"value = flow.get('count') || 0\n\nvalue++\nif(value > 3)\n    value = 1\n\nflow.set('count', value)\nreturn { payload : value };\n","outputs":1,"noerr":0,"x":211.99995040893555,"y":173.00000381469727,"wires":[["29569d2a.b04172","b5d5318d.6305e","9b780b7b.482bd8"]]},{"id":"29569d2a.b04172","type":"function","z":"c695b31.e6fd15","name":"iqrfEmbedLedg_Pulse","func":"var req = \n{\n    \"mType\":\"iqrfEmbedLedg_Pulse\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": flow.get('count'),\n            \"hwpId\":65535,\n            \"param\":{}\n            \n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":414.99995040893555,"y":105.0000057220459,"wires":[["29c88211.3334de"]]},{"id":"eaeebb7e.f57a48","type":"switch","z":"c695b31.e6fd15","name":"Valid","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":981.0000152587891,"y":688.0001344680786,"wires":[[],["cc842165.0cf55"]]},{"id":"64c1f53f.19485c","type":"inject","z":"c695b31.e6fd15","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":112.99994277954102,"y":75,"wires":[["80941cf5.89343"]]},{"id":"93d0f647.e4f0e8","type":"catch","z":"c695b31.e6fd15","name":"Invalid Rsp","scope":["9f2707af.188678"],"x":698.0000076293945,"y":594.0001316070557,"wires":[["67f24673.d4f548"]]},{"id":"dc18f571.5ca4c8","type":"file","z":"c695b31.e6fd15","name":"embedLedgApiTest","filename":"/home/spinarr/iqrf/embedLedgApiTest.txt","appendNewline":true,"createDir":true,"overwriteFile":"false","x":362.99999237060547,"y":891.0001173019409,"wires":[]},{"id":"336687d6.f05ad8","type":"function","z":"c695b31.e6fd15","name":"iqrfEmbedLedg_Get","func":"var req = \n{\n    \"mType\":\"iqrfEmbedLedg_Get\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": flow.get('count'),\n            \"hwpId\":65535,\n            \"param\":{}\n            \n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":485.9999694824219,"y":390.0000114440918,"wires":[["7e0e03af.cef60c"]]},{"id":"9b780b7b.482bd8","type":"delay","z":"c695b31.e6fd15","name":"","pauseType":"delay","timeout":"6","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":222.99997329711914,"y":380.0000114440918,"wires":[["336687d6.f05ad8"]]},{"id":"7e0e03af.cef60c","type":"json-schema-validator","z":"c695b31.e6fd15","name":"iqrfEmbedLedg_Get-request","func":"{\n    \"title\": \"iqrfEmbedLedg_Get-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledg - Get request.\",\n            \"enum\": [\n                \"iqrfEmbedLedg_Get\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":789.9999656677246,"y":328.00000953674316,"wires":[["8c4f5bf9.9d2138","2c906afd.75adf6"]]},{"id":"bac5245c.b3c118","type":"json-schema-validator","z":"c695b31.e6fd15","name":"iqrfEmbedLedg_Get-response","func":"{\n    \"title\": \"iqrfEmbedLedg_Get-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledg - Get response.\",\n            \"enum\": [\n                \"iqrfEmbedLedg_Get\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"onOff\": {\n                                    \"type\": \"boolean\",\n                                    \"description\": \"LED status.\"\n                                }\n                            }\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":752.0000991821289,"y":913.0001907348633,"wires":[["67f24673.d4f548","eaeebb7e.f57a48"]]},{"id":"ec89e9ad.5cd588","type":"status","z":"c695b31.e6fd15","name":"","scope":["cc842165.0cf55"],"x":1166.0000190734863,"y":856.0001382827759,"wires":[[]]},{"id":"cf311d43.f64f6","type":"function","z":"c695b31.e6fd15","name":"iqrfEmbedLedg_Set","func":"var req = \n{\n    \"mType\":\"iqrfEmbedLedg_Set\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\":flow.get('count'),\n            \"hwpId\":65535,\n            \"param\": {\n                \"onOff\":true\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":459.0000915527344,"y":232.0000877380371,"wires":[["5a236cee.837494"]]},{"id":"b5d5318d.6305e","type":"delay","z":"c695b31.e6fd15","name":"","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":300.00004959106445,"y":300.00000858306885,"wires":[["cf311d43.f64f6"]]},{"id":"5a236cee.837494","type":"json-schema-validator","z":"c695b31.e6fd15","name":"iqrfEmbedLedg_Set-request","func":"{\n    \"title\": \"iqrfEmbedLedg_Set-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledg - Set request.\",\n            \"enum\": [\n                \"iqrfEmbedLedg_Set\"            \n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                       \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"onOff\": {\n                                    \"type\": \"boolean\",\n                                    \"description\": \"Turns on/off LED.\"\n                                }\n                            }\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":741.9999389648438,"y":214.0000057220459,"wires":[["8c4f5bf9.9d2138","2c906afd.75adf6"]]},{"id":"6c2cc766.198328","type":"json-schema-validator","z":"c695b31.e6fd15","name":"iqrfEmbedLedg_Set-response","func":"{\n    \"title\": \"iqrfEmbedLedg_Set-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Ledg - Set response.\",\n            \"enum\": [\n                \"iqrfEmbedLedg_Set\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":722.0000152587891,"y":788.6668529510498,"wires":[["67f24673.d4f548","eaeebb7e.f57a48"]]},{"id":"4be0f059.26d71","type":"mqtt in","z":"a81422ed.903dd","name":"DpaResponse","topic":"Iqrf/DpaResponse","qos":"2","broker":"93b69e15.901c7","x":164.0000228881836,"y":1383.6671743392944,"wires":[["4d842396.d2cfbc","faa53d6f.d4d9d"]]},{"id":"6cc1fb81.9348c4","type":"mqtt out","z":"a81422ed.903dd","name":"DpaRequest","topic":"Iqrf/DpaRequest","qos":"","retain":"","broker":"93b69e15.901c7","x":1239.0000343322754,"y":567.6666984558105,"wires":[]},{"id":"1a360c0.8eaeff4","type":"debug","z":"a81422ed.903dd","name":"ValidatorRsp","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1186.0000305175781,"y":1490.667031288147,"wires":[]},{"id":"f592d92d.8eef38","type":"json-schema-validator","z":"a81422ed.903dd","name":"iqrfSensor_ReadSensorsWithTypes-response","func":"{\n    \"title\": \"iqrfSensor_ReadSensorsWithTypes-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Sensor - Read with Types response.\",\n            \"enum\": [\n                \"iqrfSensor_ReadSensorsWithTypes\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"sensors\": {\n                                    \"type\": \"array\",\n                                    \"maxItems\": 31,\n                                    \"description\": \"Returns array of objects for every sensor, see its description.\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"type\": {\n                                                \"type\": \"integer\",\n                                                \"description\": \"Value type of the sensor (quantity).\"\n                                            },\n                                            \"name\": {\n                                                \"type\": \"string\",\n                                                \"description\": \"Name of the sensor (quantity).\"\n                                            },\n                                            \"shortName\": {\n                                                \"type\": \"string\",\n                                                \"description\": \" Short name of the sensor (quantity). Typically it is a symbol used at physics.\"\n                                            },\n                                            \"value\": {\n                                                \"oneOf\": [\n                                                    { \"type\": \"number\" },\n                                                    { \"type\": \"null\" }\n                                                ],\n                                                \"description\": \"Value of the sensor.\"\n                                            },\n                                            \"unit\": {\n                                                \"type\": \"string\",\n                                                \"description\": \"Unit of the quantity. Dimensionless quantities has \\\"\\\".\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"type\",\n                                            \"name\",\n                                            \"shortName\",\n                                            \"value\",\n                                            \"unit\"\n                                        ]\n                                    }\n                                }\n                            }\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}\n","x":767.0001373291016,"y":1527.6674041748047,"wires":[["1a360c0.8eaeff4","cc6b2433.f387f8"]]},{"id":"b99f928e.401bf","type":"json-schema-validator","z":"a81422ed.903dd","name":"iqrfSensor_ReadSensorsWithTypes-request","func":"{\n    \"title\": \"iqrfSensor_ReadSensorsWithTypes-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Sensor - Read with Types request.\",\n            \"enum\": [\n                \"iqrfSensor_ReadSensorsWithTypes\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"sensorIndexes\": {\n                                    \"oneOf\": [\n                                        { \"type\": \"null\" },\n                                        { \"type\": \"integer\" },\n                                        { \"type\": \"array\", \n                                            \"items\": {\n                                                \"type\":\"integer\"\n                                            }  \n                                        }\n                                    ],\n                                    \"description\": \"Specifies sensors to read data from. Undefined: Missing parameter: reads 1st sensor. Number: -1: reads all sensors. Array: array of indexes: specifies sensors to read.\"\n                                }\n                            }\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":843.9999389648438,"y":457.6667175292969,"wires":[["426e12fa.cbbbcc","b6e8d0e1.bdb2f"]]},{"id":"426e12fa.cbbbcc","type":"debug","z":"a81422ed.903dd","name":"ValidatorReq","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1089.0000305175781,"y":226.66667366027832,"wires":[]},{"id":"4d842396.d2cfbc","type":"json","z":"a81422ed.903dd","name":"","property":"payload","action":"","pretty":false,"x":325.9999885559082,"y":1512.667119026184,"wires":[["619bfce.30bac04","2408daee.919d26"]]},{"id":"b6e8d0e1.bdb2f","type":"switch","z":"a81422ed.903dd","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1112.0002746582031,"y":316.6666955947876,"wires":[[],["4c93e983.198968","50d1887f.ff7698"]]},{"id":"a0f02b70.714988","type":"switch","z":"a81422ed.903dd","name":"status","property":"payload.data.status","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"neq","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1187.0000343322754,"y":1698.667200088501,"wires":[[],[]]},{"id":"619bfce.30bac04","type":"switch","z":"a81422ed.903dd","name":"mType","property":"payload.mType","propertyType":"msg","rules":[{"t":"eq","v":"iqrfSensor_ReadSensorsWithTypes","vt":"str"},{"t":"eq","v":"iqrfSensor_Enumerate","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":454.00009536743164,"y":1448.6673603057861,"wires":[["f592d92d.8eef38"],["cb59ce78.b2bd2"]]},{"id":"447506cd.90c6a8","type":"function","z":"a81422ed.903dd","name":"iqrfSensor_ReadSensorsWithTypes","func":"var req = \n{\n    \"mType\":\"iqrfSensor_ReadSensorsWithTypes\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": 1,\n            \"hwpId\": 65535,\n            \"param\": {}\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":455.9999465942383,"y":212.6667127609253,"wires":[["b99f928e.401bf"]]},{"id":"cc6b2433.f387f8","type":"switch","z":"a81422ed.903dd","name":"Valid","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1094.0000305175781,"y":1607.6673593521118,"wires":[[],["a0f02b70.714988"]]},{"id":"b9ac6aa3.7b8cc8","type":"inject","z":"a81422ed.903dd","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":83.99993896484375,"y":128.66671466827393,"wires":[["d1310652.b7b288","1832e613.9c7cda","a7591057.04879"]]},{"id":"c4d43fba.c4a95","type":"catch","z":"a81422ed.903dd","name":"Invalid Rsp","scope":["f592d92d.8eef38"],"x":953.0001029968262,"y":1433.6670322418213,"wires":[["1a360c0.8eaeff4"]]},{"id":"2408daee.919d26","type":"file","z":"a81422ed.903dd","name":"iqrfSensorApiTest","filename":"/home/spinarr/iqrf/iqrfSensorApiTest.txt","appendNewline":true,"createDir":true,"overwriteFile":"false","x":382.00000762939453,"y":1668.6673278808594,"wires":[]},{"id":"8804ae4e.138aa","type":"status","z":"a81422ed.903dd","name":"","scope":["a0f02b70.714988"],"x":1232.0000228881836,"y":1774.667233467102,"wires":[[]]},{"id":"d1310652.b7b288","type":"switch","z":"a81422ed.903dd","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":226.0000457763672,"y":251.66667366027832,"wires":[["447506cd.90c6a8"],["960b9629.02c558"]]},{"id":"1000ab19.f0b665","type":"websocket out","z":"a81422ed.903dd","name":"DpaRequest","server":"","client":"a8bc67cc.6fd248","x":1253.0000343322754,"y":746.6667041778564,"wires":[]},{"id":"d6fe021b.94bae","type":"websocket in","z":"a81422ed.903dd","name":"DpaResponse","server":"","client":"a8bc67cc.6fd248","x":213.00002670288086,"y":1305.6670083999634,"wires":[["faa53d6f.d4d9d","4d842396.d2cfbc"]]},{"id":"a81e60c0.8b85","type":"mqtt in","z":"8847ffec.bee27","name":"DpaResponse","topic":"Iqrf/DpaResponse","qos":"2","broker":"93b69e15.901c7","x":136,"y":588.6668872833252,"wires":[["71e26628.7e0e48","e2f6532f.70a5"]]},{"id":"2c240dba.096792","type":"mqtt out","z":"8847ffec.bee27","name":"DpaRequest","topic":"Iqrf/DpaRequest","qos":"","retain":"","broker":"93b69e15.901c7","x":1222.0000343322754,"y":313.6666955947876,"wires":[]},{"id":"6f3d47cd.3d7b58","type":"debug","z":"8847ffec.bee27","name":"ValidatorRsp","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":955.9999847412109,"y":510.6668243408203,"wires":[]},{"id":"335657df.eafa38","type":"json-schema-validator","z":"8847ffec.bee27","name":"iqrfRaw-response","func":"{\n    \"title\": \"iqrfRaw-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Message type for Raw communication.\",\n            \"enum\": [\n                \"iqrfRaw\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response\"\n                        }\n                    },\n                    \"required\": [\n                        \"response\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}\n","x":686.0000495910645,"y":633.6668901443481,"wires":[["6f3d47cd.3d7b58","d4acf294.2f2ee"]]},{"id":"a7f67c44.8a3fd","type":"json-schema-validator","z":"8847ffec.bee27","name":"iqrfRaw-request","func":"{\n    \"title\": \"iqrfRaw-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Message type for Raw communication.\",\n            \"enum\": [\n                \"iqrfRaw\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":722.9999389648438,"y":143.66673374176025,"wires":[["2960f7a5.17e538","a074b590.55f6f8"]]},{"id":"2960f7a5.17e538","type":"debug","z":"8847ffec.bee27","name":"ValidatorReq","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1078.0000305175781,"y":132.66669082641602,"wires":[]},{"id":"71e26628.7e0e48","type":"json","z":"8847ffec.bee27","name":"","property":"payload","action":"","pretty":false,"x":297.9999809265137,"y":726.6668939590454,"wires":[["85c90f76.2a799","8c2086c1.974298"]]},{"id":"a074b590.55f6f8","type":"switch","z":"8847ffec.bee27","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1092.0001945495605,"y":231.66669464111328,"wires":[[],["177c02f8.d5f15d","623183e1.e4f03c"]]},{"id":"a018651d.7cb848","type":"switch","z":"8847ffec.bee27","name":"status","property":"payload.data.status","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"neq","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1093.999984741211,"y":732.6668243408203,"wires":[[],[]]},{"id":"85c90f76.2a799","type":"switch","z":"8847ffec.bee27","name":"mType","property":"payload.mType","propertyType":"msg","rules":[{"t":"eq","v":"iqrfRaw","vt":"str"},{"t":"eq","v":"iqrfRawHdp","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":466.0000228881836,"y":695.6669158935547,"wires":[["335657df.eafa38"],["a592be66.95871"]]},{"id":"c981c4cf.115cc8","type":"function","z":"8847ffec.bee27","name":"count","func":"value = flow.get('count') || 0\n\nvalue++\nif(value > 3)\n    value = 1\n\nflow.set('count', value)\nreturn { payload : value };\n","outputs":1,"noerr":0,"x":198.99997329711914,"y":157.66669273376465,"wires":[["c5ad574b.2b7068","c4da781a.c77b28"]]},{"id":"576d7c1b.107614","type":"function","z":"8847ffec.bee27","name":"iqrfRaw","func":"var req = \n{\n    \"mType\":\"iqrfRaw\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"request\": flow.get('count') + \".00.06.03.ff.ff\"\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":501.9999313354492,"y":115.66673278808594,"wires":[["a7f67c44.8a3fd"]]},{"id":"d4acf294.2f2ee","type":"switch","z":"8847ffec.bee27","name":"Valid","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":976.0000076293945,"y":632.666841506958,"wires":[[],["a018651d.7cb848"]]},{"id":"4090cee.852f33","type":"inject","z":"8847ffec.bee27","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":122.99994277954102,"y":253.6666965484619,"wires":[["c981c4cf.115cc8"]]},{"id":"6d12645.1bdba9c","type":"catch","z":"8847ffec.bee27","name":"Invalid Rsp","scope":["335657df.eafa38"],"x":693,"y":538.6668386459351,"wires":[["6f3d47cd.3d7b58"]]},{"id":"8c2086c1.974298","type":"file","z":"8847ffec.bee27","name":"rawApiTest","filename":"/home/spinarr/iqrf/rawApiTest.txt","appendNewline":true,"createDir":true,"overwriteFile":"false","x":404.9999694824219,"y":853.6668548583984,"wires":[]},{"id":"636e468b.1cde98","type":"status","z":"8847ffec.bee27","name":"","scope":["a018651d.7cb848"],"x":1161.0000305175781,"y":808.6668529510498,"wires":[[]]},{"id":"4ffbd4ff.358b4c","type":"function","z":"8847ffec.bee27","name":"iqrfRawHdp","func":"var req = \n{\n  \"mType\": \"iqrfRawHdp\",\n  \"data\": {\n    \"msgId\": \"test\",\n    \"timeout\": 1000,\n    \"req\": {\n      \"nAdr\": flow.get('count'),\n      \"pNum\": 6,\n      \"pCmd\": 3,\n      \"hwpId\": 65535,\n      \"rData\": []\n    },\n    \"returnVerbose\": global.get('globalVerbose')\n  }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":582.0001373291016,"y":299.6667785644531,"wires":[["b230b0eb.62f5a"]]},{"id":"c5ad574b.2b7068","type":"delay","z":"8847ffec.bee27","name":"","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":303.0000877380371,"y":253.6666955947876,"wires":[["a989f06d.84bec"]]},{"id":"b230b0eb.62f5a","type":"json-schema-validator","z":"8847ffec.bee27","name":"iqrfRawHdp-request","func":"{\n    \"title\": \"iqrfRawHdp-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Message type for Raw Hdp communication.\",\n            \"enum\": [\n                \"iqrfRawHdp\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"pNum\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Peripheral integer.\"\n                        },\n                        \"pCmd\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Peripheral command.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rData\": {\n                            \"type\": \"array\",\n                            \"description\": \"Binary buffer with DPA request data.\",\n                            \"items\": {\n                                \"type\": \"integer\"\n                            }\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"pNum\",\n                        \"pCmd\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":840.9999389648438,"y":321.66669845581055,"wires":[["2960f7a5.17e538","a074b590.55f6f8"]]},{"id":"a592be66.95871","type":"json-schema-validator","z":"8847ffec.bee27","name":"iqrfRawHdp-response","func":"{\n    \"title\": \"iqrfRawHdp-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Message type for Raw Hdp communication.\",\n            \"enum\": [\n                \"iqrfRawHdp\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"pNum\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Peripheral number.\"\n                        },\n                        \"pCmd\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Peripheral command.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"rData\": {\n                            \"type\": \"array\",\n                            \"description\": \"Binary buffer with DPA response data.\",\n                            \"items\": {\n                                \"type\": \"integer\"\n                            }\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"pNum\",\n                        \"pCmd\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":689.0000114440918,"y":725.3335599899292,"wires":[["6f3d47cd.3d7b58","d4acf294.2f2ee"]]},{"id":"1892f55f.ab47fb","type":"function","z":"8847ffec.bee27","name":"iqrfRaw","func":"var req = \n{\n    \"mType\":\"iqrfRaw\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"req\": {\n            \"request\": flow.get('count') + \".00.06.03.ff.ff\"\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":502,"y":168.66668701171875,"wires":[["a7f67c44.8a3fd"]]},{"id":"c4da781a.c77b28","type":"switch","z":"8847ffec.bee27","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":353,"y":142.66668701171875,"wires":[["576d7c1b.107614"],["1892f55f.ab47fb"]]},{"id":"5fcc21a5.95ed9","type":"function","z":"8847ffec.bee27","name":"iqrfRawHdp","func":"var req = \n{\n  \"mType\": \"iqrfRawHdp\",\n  \"data\": {\n    \"msgId\": \"test\",\n    \"req\": {\n      \"nAdr\": flow.get('count'),\n      \"pNum\": 6,\n      \"pCmd\": 3,\n      \"hwpId\": 65535,\n      \"rData\": []\n    },\n    \"returnVerbose\": global.get('globalVerbose')\n  }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":586.0000152587891,"y":364.66669845581055,"wires":[["b230b0eb.62f5a"]]},{"id":"a989f06d.84bec","type":"switch","z":"8847ffec.bee27","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":406.0000114440918,"y":335.66669845581055,"wires":[["4ffbd4ff.358b4c"],["5fcc21a5.95ed9"]]},{"id":"41070674.456e08","type":"websocket out","z":"8847ffec.bee27","name":"DpaRequest","server":"","client":"a8bc67cc.6fd248","x":1220.0000305175781,"y":423.6666784286499,"wires":[]},{"id":"5b1f1b7f.4b84e4","type":"websocket in","z":"8847ffec.bee27","name":"DpaResponse","server":"","client":"a8bc67cc.6fd248","x":183.00000381469727,"y":511.66668128967285,"wires":[["e2f6532f.70a5","71e26628.7e0e48"]]},{"id":"960b9629.02c558","type":"function","z":"a81422ed.903dd","name":"iqrfSensor_ReadSensorsWithTypes","func":"var req = \n{\n    \"mType\":\"iqrfSensor_ReadSensorsWithTypes\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"req\": {\n            \"nAdr\": 1,\n            \"hwpId\": 65535,\n            \"param\": {}\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":458.0000915527344,"y":275.0000286102295,"wires":[["b99f928e.401bf"]]},{"id":"87c42b5f.3a2938","type":"switch","z":"a81422ed.903dd","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":234.00000381469727,"y":446.0000123977661,"wires":[["5c0c411d.a011b"],["bc4267e.bff7098"]]},{"id":"5c0c411d.a011b","type":"function","z":"a81422ed.903dd","name":"iqrfSensor_ReadSensorsWithTypes","func":"var req = \n{\n    \"mType\":\"iqrfSensor_ReadSensorsWithTypes\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": 1,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"sensorIndexes\": [0,1]\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":453.00001525878906,"y":398.0000114440918,"wires":[["b99f928e.401bf"]]},{"id":"bc4267e.bff7098","type":"function","z":"a81422ed.903dd","name":"iqrfSensor_ReadSensorsWithTypes","func":"var req = \n{\n    \"mType\":\"iqrfSensor_ReadSensorsWithTypes\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"req\": {\n            \"nAdr\": 1,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"sensorIndexes\": [0,1]\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":452.0000762939453,"y":483.00001430511475,"wires":[["b99f928e.401bf"]]},{"id":"8acee5be.fb44f8","type":"switch","z":"a81422ed.903dd","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":238.00000381469727,"y":645.0000171661377,"wires":[["c8e85d13.95996"],["8f054333.5a269"]]},{"id":"c8e85d13.95996","type":"function","z":"a81422ed.903dd","name":"iqrfSensor_ReadSensorsWithTypes","func":"var req = \n{\n    \"mType\":\"iqrfSensor_ReadSensorsWithTypes\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": 1,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"sensorIndexes\": -1\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":459.00000762939453,"y":601.0000171661377,"wires":[["b99f928e.401bf"]]},{"id":"8f054333.5a269","type":"function","z":"a81422ed.903dd","name":"iqrfSensor_ReadSensorsWithTypes","func":"var req = \n{\n    \"mType\":\"iqrfSensor_ReadSensorsWithTypes\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": 1,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"sensorIndexes\": -1\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":456.0000457763672,"y":691.0000200271606,"wires":[["b99f928e.401bf"]]},{"id":"db003aa4.e726b8","type":"debug","z":"bc9e35c5.53b6d8","name":"DpaResponse","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":320.50000762939453,"y":612.6666851043701,"wires":[]},{"id":"c855a940.c770c8","type":"function","z":"a9ae6f54.c2d37","name":"globalVerbose","func":"global.set(\"globalVerbose\", msg.payload);","outputs":1,"noerr":0,"x":397.5000762939453,"y":108,"wires":[[]]},{"id":"7a60d651.bb04b8","type":"inject","z":"a9ae6f54.c2d37","name":"","topic":"","payload":"true","payloadType":"bool","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":142.5000114440918,"y":88.33332252502441,"wires":[["c855a940.c770c8"]]},{"id":"b72767.a6446898","type":"inject","z":"a9ae6f54.c2d37","name":"","topic":"","payload":"false","payloadType":"bool","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":141,"y":134.9999828338623,"wires":[["c855a940.c770c8"]]},{"id":"a0e77c40.839e6","type":"function","z":"a9ae6f54.c2d37","name":"globalTimeout","func":"global.set(\"globalTimeout\", msg.payload);","outputs":1,"noerr":0,"x":992.0000381469727,"y":107.99998474121094,"wires":[[]]},{"id":"cd77d656.ad3d18","type":"inject","z":"a9ae6f54.c2d37","name":"","topic":"","payload":"true","payloadType":"bool","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":751.999942779541,"y":87.33331108093262,"wires":[["a0e77c40.839e6"]]},{"id":"73df10ab.8ef7e","type":"inject","z":"a9ae6f54.c2d37","name":"","topic":"","payload":"false","payloadType":"bool","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":750.4999313354492,"y":133.9999713897705,"wires":[["a0e77c40.839e6"]]},{"id":"8b9a40f3.81f8b","type":"websocket out","z":"bc9e35c5.53b6d8","name":"DpaRequest","server":"","client":"a8bc67cc.6fd248","x":1256.0000343322754,"y":329.00000953674316,"wires":[]},{"id":"f02b485f.bd5808","type":"websocket out","z":"c695b31.e6fd15","name":"DpaRequest","server":"","client":"a8bc67cc.6fd248","x":1228.0000343322754,"y":324.00000953674316,"wires":[]},{"id":"9721e6c9.dd4d58","type":"websocket in","z":"bc9e35c5.53b6d8","name":"DpaResponse","server":"","client":"a8bc67cc.6fd248","x":100,"y":595.6666831970215,"wires":[["6939dea7.d9b01","db003aa4.e726b8"]]},{"id":"226d121d.582fde","type":"websocket in","z":"c695b31.e6fd15","name":"DpaResponse","server":"","client":"a8bc67cc.6fd248","x":167.00000381469727,"y":623.0000190734863,"wires":[["438ec5c3.ff9b5c","1222c6e3.c55969"]]},{"id":"438ec5c3.ff9b5c","type":"debug","z":"c695b31.e6fd15","name":"DpaResponse","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":412.00004959106445,"y":594.0000162124634,"wires":[]},{"id":"2f873bd2.1cb6b4","type":"debug","z":"c695b31.e6fd15","name":"DpaRequest","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1227.0000381469727,"y":143.0000057220459,"wires":[]},{"id":"5640158d.9339cc","type":"debug","z":"bc9e35c5.53b6d8","name":"DpaRequest","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1244.0000381469727,"y":183.00000381469727,"wires":[]},{"id":"4c93e983.198968","type":"debug","z":"a81422ed.903dd","name":"DpaRequest","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1290,"y":304,"wires":[]},{"id":"faa53d6f.d4d9d","type":"debug","z":"a81422ed.903dd","name":"DpaResponse","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":449.0000114440918,"y":1335.6668710708618,"wires":[]},{"id":"e2f6532f.70a5","type":"debug","z":"8847ffec.bee27","name":"DpaResponse","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":416,"y":552,"wires":[]},{"id":"177c02f8.d5f15d","type":"debug","z":"8847ffec.bee27","name":"DpaRequest","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1273,"y":242,"wires":[]},{"id":"1832e613.9c7cda","type":"delay","z":"a81422ed.903dd","name":"","pauseType":"delay","timeout":"3","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":101,"y":350,"wires":[["87c42b5f.3a2938"]]},{"id":"a7591057.04879","type":"delay","z":"a81422ed.903dd","name":"","pauseType":"delay","timeout":"6","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":106,"y":556,"wires":[["8acee5be.fb44f8"]]},{"id":"450fb3b7.6137cc","type":"function","z":"a9ae6f54.c2d37","name":"globalChannel","func":"global.set(\"globalChannel\", msg.payload);","outputs":1,"noerr":0,"x":665.0000038146973,"y":295,"wires":[[]]},{"id":"451ec394.a5956c","type":"inject","z":"a9ae6f54.c2d37","name":"mqtt","topic":"","payload":"mqtt","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":409.0000114440918,"y":280.00000762939453,"wires":[["450fb3b7.6137cc"]]},{"id":"86cb0fb7.d5c75","type":"inject","z":"a9ae6f54.c2d37","name":"websocket","topic":"","payload":"websocket","payloadType":"str","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":410.00000381469727,"y":353,"wires":[["450fb3b7.6137cc"]]},{"id":"447c4293.31fbec","type":"switch","z":"c695b31.e6fd15","name":"Channel","property":"globalChannel","propertyType":"global","rules":[{"t":"eq","v":"mqtt","vt":"str"},{"t":"eq","v":"websocket","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1022.0000305175781,"y":387.0000123977661,"wires":[["2101e935.25e6f6"],["f02b485f.bd5808"]]},{"id":"323bcb9d.d5e474","type":"switch","z":"bc9e35c5.53b6d8","name":"Channel","property":"globalChannel","propertyType":"global","rules":[{"t":"eq","v":"mqtt","vt":"str"},{"t":"eq","v":"websocket","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1070.0001106262207,"y":300.00000858306885,"wires":[["caf4074.7d713f8"],["8b9a40f3.81f8b"]]},{"id":"50d1887f.ff7698","type":"switch","z":"a81422ed.903dd","name":"Channel","property":"globalChannel","propertyType":"global","rules":[{"t":"eq","v":"mqtt","vt":"str"},{"t":"eq","v":"websocket","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1018.0000305175781,"y":659.0001163482666,"wires":[["6cc1fb81.9348c4"],["1000ab19.f0b665"]]},{"id":"623183e1.e4f03c","type":"switch","z":"8847ffec.bee27","name":"Channel","property":"globalChannel","propertyType":"global","rules":[{"t":"eq","v":"mqtt","vt":"str"},{"t":"eq","v":"websocket","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1062,"y":373,"wires":[["2c240dba.096792"],["41070674.456e08"]]},{"id":"6b8b641d.7f1e8c","type":"mqtt in","z":"1cc78240.6527ae","name":"DpaResponse","topic":"Iqrf/DpaResponse","qos":"2","broker":"93b69e15.901c7","x":181.00000762939453,"y":608.0001821517944,"wires":[["d621715b.13db2","29c51e60.0ad792"]]},{"id":"c299d26e.56e48","type":"mqtt out","z":"1cc78240.6527ae","name":"DpaRequest","topic":"Iqrf/DpaRequest","qos":"","retain":"","broker":"93b69e15.901c7","x":1196.9999465942383,"y":263.0000014305115,"wires":[]},{"id":"f4ae2ed7.aad4","type":"debug","z":"1cc78240.6527ae","name":"ValidatorRsp","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":987.0000267028809,"y":506.00013542175293,"wires":[]},{"id":"5ac91a35.77c214","type":"json-schema-validator","z":"1cc78240.6527ae","name":"iqrfEmbedThermometer_Read-response","func":"{\n    \"title\": \"iqrfEmbedThermometer_Read-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Thermometer - Read response.\",\n            \"enum\": [\n                \"iqrfEmbedThermometer_Read\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"temperature\": {\n                                    \"type\": \"number\",\n                                    \"description\": \"Temperature value in *C.\"\n                                }\n                            }\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":786.0000152587891,"y":717.0001792907715,"wires":[["f4ae2ed7.aad4","63629b3b.a2ed64"]]},{"id":"2a54b988.53a996","type":"json-schema-validator","z":"1cc78240.6527ae","name":"iqrfEmbedThermometer_Read-request","func":"{\n    \"title\": \"iqrfEmbedThermometer_Read-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Embedded peripheral Thermometer - Read request.\",\n            \"enum\": [\n                \"iqrfEmbedThermometer_Read\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":717.9999389648438,"y":161.00000381469727,"wires":[["abe22874.ee20e8","c07d0883.fb7568"]]},{"id":"abe22874.ee20e8","type":"debug","z":"1cc78240.6527ae","name":"ValidatorReq","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1051.9999465942383,"y":87.00000143051147,"wires":[]},{"id":"d621715b.13db2","type":"json","z":"1cc78240.6527ae","name":"","property":"payload","action":"","pretty":false,"x":356.99997329711914,"y":700.0001163482666,"wires":[["8b981fc7.7133b","1ae0cac5.4621a5"]]},{"id":"c07d0883.fb7568","type":"switch","z":"1cc78240.6527ae","name":"Valid","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1069.0000038146973,"y":183.0000057220459,"wires":[[],["1161bf6b.3efe31","d4e3cfe5.3558"]]},{"id":"6491160f.6e1678","type":"switch","z":"1cc78240.6527ae","name":"status","property":"payload.data.status","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"neq","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1125.9999732971191,"y":691.0001163482666,"wires":[[],[]]},{"id":"8b981fc7.7133b","type":"switch","z":"1cc78240.6527ae","name":"mType","property":"payload.mType","propertyType":"msg","rules":[{"t":"eq","v":"iqrfEmbedThermometer_Read","vt":"str"}],"checkall":"true","repair":false,"outputs":1,"x":505.00001525878906,"y":630.0001811981201,"wires":[["5ac91a35.77c214"]]},{"id":"6649cd81.ba1a34","type":"function","z":"1cc78240.6527ae","name":"count","func":"value = flow.get('count') || 0\n\nvalue++\nif(value > 3)\n    value = 1\n\nflow.set('count', value)\nreturn { payload : value };\n","outputs":1,"noerr":0,"x":219.9999237060547,"y":183.00000381469727,"wires":[["1ef0df76.0e3a01"]]},{"id":"1ef0df76.0e3a01","type":"function","z":"1cc78240.6527ae","name":"iqrfEmbedThermometer_Read","func":"var req = \n{\n    \"mType\":\"iqrfEmbedThermometer_Read\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": flow.get('count'),\n            \"hwpId\":65535,\n            \"param\":{}\n            \n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":437.9999542236328,"y":259.00004863739014,"wires":[["2a54b988.53a996"]]},{"id":"63629b3b.a2ed64","type":"switch","z":"1cc78240.6527ae","name":"Valid","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1007.9999961853027,"y":591.0001335144043,"wires":[[],["6491160f.6e1678"]]},{"id":"3231c399.4bb04c","type":"inject","z":"1cc78240.6527ae","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":120.99991607666016,"y":85,"wires":[["6649cd81.ba1a34"]]},{"id":"9692cb6b.c551a8","type":"catch","z":"1cc78240.6527ae","name":"Invalid Rsp","scope":["5ac91a35.77c214"],"x":730.0000190734863,"y":547.0001373291016,"wires":[["f4ae2ed7.aad4"]]},{"id":"1ae0cac5.4621a5","type":"file","z":"1cc78240.6527ae","name":"embedThermometerApiTest","filename":"/home/spinarr/iqrf/embedThermometerApiTest.txt","appendNewline":true,"createDir":true,"overwriteFile":"false","x":419.99997329711914,"y":794.0001163482666,"wires":[]},{"id":"a47e310b.8d8d8","type":"status","z":"1cc78240.6527ae","name":"","scope":["6491160f.6e1678"],"x":1193,"y":759.0001373291016,"wires":[[]]},{"id":"bc564e35.6e4b4","type":"websocket out","z":"1cc78240.6527ae","name":"DpaRequest","server":"","client":"a8bc67cc.6fd248","x":1236.0000076293945,"y":334.00000953674316,"wires":[]},{"id":"dcb711a4.7c8a3","type":"websocket in","z":"1cc78240.6527ae","name":"DpaResponse","server":"","client":"a8bc67cc.6fd248","x":193.99998474121094,"y":526.000018119812,"wires":[["29c51e60.0ad792","d621715b.13db2"]]},{"id":"29c51e60.0ad792","type":"debug","z":"1cc78240.6527ae","name":"DpaResponse","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":439.0000305175781,"y":497.00001525878906,"wires":[]},{"id":"1161bf6b.3efe31","type":"debug","z":"1cc78240.6527ae","name":"DpaRequest","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1235.0000114440918,"y":153.0000057220459,"wires":[]},{"id":"d4e3cfe5.3558","type":"switch","z":"1cc78240.6527ae","name":"Channel","property":"globalChannel","propertyType":"global","rules":[{"t":"eq","v":"mqtt","vt":"str"},{"t":"eq","v":"websocket","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1034.0001907348633,"y":316.00000953674316,"wires":[["c299d26e.56e48"],["bc564e35.6e4b4"]]},{"id":"c177a627.4a8118","type":"json-schema-validator","z":"a81422ed.903dd","name":"iqrfSensor_Enumerate-request","func":"{\n    \"title\": \"iqrfSensor_Enumerate-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Sensor - Enumerate request.\",\n            \"enum\": [\n                \"iqrfSensor_Enumerate\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":794.0000228881836,"y":1014.6667976379395,"wires":[["5a77f01e.636b6","ad467c6f.209b7"]]},{"id":"5a77f01e.636b6","type":"debug","z":"a81422ed.903dd","name":"ValidatorReq","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":988.0003509521484,"y":892.6666927337646,"wires":[]},{"id":"ad467c6f.209b7","type":"switch","z":"a81422ed.903dd","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1119.000358581543,"y":969.6667766571045,"wires":[[],["8750f5cc.6e47d8","50d1887f.ff7698"]]},{"id":"15ff2b8c.219ac4","type":"function","z":"a81422ed.903dd","name":"iqrfSensor_Enumerate","func":"var req = \n{\n    \"mType\":\"iqrfSensor_Enumerate\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": 1,\n            \"hwpId\": 65535,\n            \"param\": {}\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":459.0000534057617,"y":983.6667728424072,"wires":[["c177a627.4a8118"]]},{"id":"f0d76332.19663","type":"inject","z":"a81422ed.903dd","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":127.00004577636719,"y":899.6667747497559,"wires":[["4424b4f4.f037dc"]]},{"id":"4424b4f4.f037dc","type":"switch","z":"a81422ed.903dd","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":269.0001525878906,"y":1022.6667337417603,"wires":[["15ff2b8c.219ac4"],["3ee9bb57.c7bac4"]]},{"id":"3ee9bb57.c7bac4","type":"function","z":"a81422ed.903dd","name":"iqrfSensor_Enumerate","func":"var req = \n{\n    \"mType\":\"iqrfSensor_Enumerate\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"req\": {\n            \"nAdr\": 1,\n            \"hwpId\": 65535,\n            \"param\": {}\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":457.0001983642578,"y":1048.000069618225,"wires":[["c177a627.4a8118"]]},{"id":"8750f5cc.6e47d8","type":"debug","z":"a81422ed.903dd","name":"DpaRequest","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1216.0002002716064,"y":1111.0000286102295,"wires":[]},{"id":"cb59ce78.b2bd2","type":"json-schema-validator","z":"a81422ed.903dd","name":"iqrfSensor_Enumerate-response","func":"{\n    \"title\": \"iqrfSensor_Enumerate-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Sensor - Enumerate response.\",\n            \"enum\": [\n                \"iqrfSensor_Enumerate\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"sensors\": {\n                                    \"type\": \"array\",\n                                    \"description\": \"Returns array of objects for every sensor, see its description.\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"type\": {\n                                                \"type\": \"integer\",\n                                                \"description\": \"Value type of the sensor (quantity).\"\n                                            },\n                                            \"name\": {\n                                                \"type\": \"string\",\n                                                \"description\": \"Name of the sensor (quantity).\"\n                                            },\n                                            \"shortName\": {\n                                                \"type\": \"string\",\n                                                \"description\": \" Short name of the sensor (quantity). Typically it is a symbol used at physics.\"\n                                            },\n                                            \"unit\": {\n                                                \"type\": \"string\",\n                                                \"description\": \"Unit of the quantity. Dimensionless quantities has \\\"\\\".\"\n                                            },\n                                            \"frcs\": {\n                                                \"type\": \"array\",\n                                                \"description\": \"Array of FRC commands supported by the sensor.\",\n                                                \"items\": {\n                                                    \"type\": \"integer\"\n                                                }\n                                            }\n                                        }\n                                    },\n                                    \"required\": [\n                                        \"type\",\n                                        \"name\",\n                                        \"shortName\",\n                                        \"unit\",\n                                        \"frcs\"\n                                    ]\n                                }\n                            }\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":726.0000152587891,"y":1622.0000886917114,"wires":[["1a360c0.8eaeff4","cc6b2433.f387f8"]]},{"id":"84cbb0ac.d19ba","type":"mqtt in","z":"2237b788.d6d558","name":"DpaResponse","topic":"Iqrf/DpaResponse","qos":"2","broker":"93b69e15.901c7","x":159,"y":842.0001592636108,"wires":[["c14b8226.cc6e7","1c1637a2.f3ee68"]]},{"id":"301b5da7.03e992","type":"mqtt out","z":"2237b788.d6d558","name":"DpaRequest","topic":"Iqrf/DpaRequest","qos":"","retain":"","broker":"93b69e15.901c7","x":1279.0000648498535,"y":405.999963760376,"wires":[]},{"id":"9920ed30.fc0d","type":"debug","z":"2237b788.d6d558","name":"ValidatorRsp","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1042.0001068115234,"y":759.0002012252808,"wires":[]},{"id":"d6cd60cd.b5a9d","type":"json-schema-validator","z":"2237b788.d6d558","name":"iqmeshNetwork_ReadTrConf-response","func":"{\n    \"title\": \"iqmeshNetwork_ReadTrConf-response\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"mType\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"IQMESH Network management - Read TR configuration response.\",\n\t\t\t\"enum\": [\n\t\t\t\t\"iqmeshNetwork_ReadTrConf\"\n\t\t\t]\n\t\t},\n\t\t\"data\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"msgId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"Message identification for binding request with response.\"\n\t\t\t\t},\n\t\t\t\t\"rsp\": {\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"description\": \"Returns following values, see its description.\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"deviceAddr\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Device address to read the configuration from.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"embPerBits\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"description\": \"An array of 32 bits. Each bit enables/disables one of the embedded 32 predefined peripherals.\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"maxItems\": 4\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfBand\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"description\": \"Used RF band.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfChannelA\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Main RF channel A of the main network. Valid numbers depend on used RF band.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfChannelB\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Same as above but second B channel. Used at RFPGM only.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfSubChannelA\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Main RF channel A of the optional subordinate network in case the node also plays a role of the coordinator of such network. Valid numbers depend on used RF band.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfSubChannelB\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Same as above but second B channel.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"txPower\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"RF output power. Valid numbers 0-7.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rxFilter\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"RF signal filter. Valid numbers 0-64.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lpRxTimeout\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Timeout for receiving RF packets at LP mode at N device.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmAltChannel\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"A nonzero value specifies an alternative DPA service mode channel.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmEnableAfterReset\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If sets, then activates RFPGM invoking by TR module reset.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmTerminateAfter1Min\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If sets, then terminates RFPGM automatically ~1 minute after reset.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmTerminateMcuPin\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If sets, then terminates RFPGM by dedicated pin of the TR module.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmDualChannel\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If sets, then enables single or dual channel function.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmLpMode\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"RFPGM receiving mode setting. If set, then LP (low power) Rx mode is used during RFPGM. Otherwise STD (standard) Rx mode is used.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmIncorrectUpload\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"Read only. Indicates that the last RFPGM has successfully been completed.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customDpaHandler\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then a Custom DPA handler is called in case of an event.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"nodeDpaInterface\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then Node device can be controlled by a SPI or UART interface.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"uartBaudrate\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Baud rate of the UART interface if one is used.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"dpaAutoexec\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then DPA Autoexec is run at a later stage of the module boot time.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"routingOff\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then the Node device does not route packets on the background.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"ioSetup\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then DPA IO Setup is run at an early stage of the module boot time.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"peerToPeer\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then device receives also peer-to-peer (non-networking) packets and raises PeerToPeer event.\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"deviceAddr\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"raw\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"description\": \"Returns array of objects req-cnf-rsp, see its description.\",\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"request\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA request.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"requestTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"confirmation\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA confirmation.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"confirmationTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"response\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA response.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"responseTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\t\"request\",\n\t\t\t\t\t\t\t\"requestTs\",\n\t\t\t\t\t\t\t\"confirmation\",\n\t\t\t\t\t\t\t\"confirmationTs\",\n\t\t\t\t\t\t\t\"response\",\n\t\t\t\t\t\t\t\"responseTs\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"insId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon instance identification.\"\n\t\t\t\t},\n\t\t\t\t\"status\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon API (general or mType) status.\"\n\t\t\t\t},\n\t\t\t\t\"statusStr\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"required\": [\n\t\t\t\t\"msgId\",\n\t\t\t\t\"rsp\",\n\t\t\t\t\"status\"\n\t\t\t]\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"mType\",\n\t\t\"data\"\n\t]\n}\n","x":735.0001373291016,"y":866.000205039978,"wires":[["9920ed30.fc0d","8d35c9f9.ea7628"]]},{"id":"56373c09.3f0354","type":"json-schema-validator","z":"2237b788.d6d558","name":"iqmeshNetwork_ReadTrConf-request","func":"{\n    \"title\": \"iqmeshNetwork_ReadTrConf-request\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"mType\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"IQMESH Network management - Read TR configuration request.\",\n\t\t\t\"enum\": [\n\t\t\t\t\"iqmeshNetwork_ReadTrConf\"\n\t\t\t]\n\t\t},\n\t\t\"data\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"msgId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"Message identification for binding request with response.\"\n\t\t\t\t},\n\t\t\t\t\"repeat\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"description\": \"Number of repetitions of DPA messages.\",\n\t\t\t\t\t\"default\": 1\n\t\t\t\t},\n\t\t\t\t\"req\": {\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"deviceAddr\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"description\": \"Device address(es) to read the configuration from.\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"deviceAddr\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"returnVerbose\": {\n\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\"description\": \"Flag that includes additional parameters in the response.\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"required\": [\n\t\t\t\t\"msgId\",\n\t\t\t\t\"req\"\n\t\t\t]\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"mType\",\n\t\t\"data\"\n\t]\n}\n","x":776.9999389648438,"y":120.00000953674316,"wires":[["b95c0448.34f3e8","f3221f29.86d95"]]},{"id":"b95c0448.34f3e8","type":"debug","z":"2237b788.d6d558","name":"ValidatorReq","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1066.0000305175781,"y":144.99995803833008,"wires":[]},{"id":"c14b8226.cc6e7","type":"json","z":"2237b788.d6d558","name":"","property":"payload","action":"","pretty":false,"x":320.9999809265137,"y":980.000165939331,"wires":[["16fb5f4b.076f81","789e6b6f.e96a94"]]},{"id":"f3221f29.86d95","type":"switch","z":"2237b788.d6d558","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1062.0003547668457,"y":282.9999656677246,"wires":[[],["42486127.71fde","356ef6de.ec367a"]]},{"id":"9c14e4ab.a61b28","type":"switch","z":"2237b788.d6d558","name":"status","property":"payload.data.status","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"neq","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1130.0000305175781,"y":986.000207901001,"wires":[[],[]]},{"id":"16fb5f4b.076f81","type":"switch","z":"2237b788.d6d558","name":"mType","property":"payload.mType","propertyType":"msg","rules":[{"t":"eq","v":"iqmeshNetwork_ReadTrConf","vt":"str"},{"t":"eq","v":"iqmeshNetwork_OtaUpload","vt":"str"},{"t":"eq","v":"iqmeshNetwork_SmartConnect","vt":"str"},{"t":"eq","v":"iqmeshNetwork_WriteTrConf","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":481.0000534057617,"y":949.0002069473267,"wires":[["d6cd60cd.b5a9d"],["6233004b.85163"],["e5aa8fe0.724e7"],["1a2f29f0.bc6516"]]},{"id":"944db009.6ffb5","type":"function","z":"2237b788.d6d558","name":"count","func":"value = flow.get('count') || 0\n\nvalue++\nif(value > 3)\n    value = 1\n\nflow.set('count', value)\nreturn { payload : value };\n","outputs":1,"noerr":0,"x":242.9999656677246,"y":189.99997425079346,"wires":[["206b30bc.4fba2"]]},{"id":"206b30bc.4fba2","type":"function","z":"2237b788.d6d558","name":"iqmeshNetwork_ReadTrConf","func":"var req = \n{\n    \"mType\":\"iqmeshNetwork_ReadTrConf\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"repeat\": 1,\n        \"req\": {\n            \"deviceAddr\": [flow.get('count')]\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":452.9999542236328,"y":133.0000343322754,"wires":[["56373c09.3f0354"]]},{"id":"8d35c9f9.ea7628","type":"switch","z":"2237b788.d6d558","name":"Valid","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1070.0000305175781,"y":877.000205039978,"wires":[[],["9c14e4ab.a61b28"]]},{"id":"eda760fc.f372b","type":"inject","z":"2237b788.d6d558","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110.99994277954102,"y":265.999963760376,"wires":[["944db009.6ffb5"]]},{"id":"1f931a7c.ca4d86","type":"catch","z":"2237b788.d6d558","name":"Invalid Rsp","scope":["d6cd60cd.b5a9d"],"x":760.0000190734863,"y":776.0002021789551,"wires":[["9920ed30.fc0d"]]},{"id":"789e6b6f.e96a94","type":"file","z":"2237b788.d6d558","name":"iqmeshNetworkApiTest","filename":"/home/spinarr/iqrf/iqmeshNetworkApiTest.txt","appendNewline":true,"createDir":true,"overwriteFile":"false","x":414.9999694824219,"y":1141.0001516342163,"wires":[]},{"id":"612b8811.f9b098","type":"status","z":"2237b788.d6d558","name":"","scope":["9c14e4ab.a61b28"],"x":1184.0000305175781,"y":1062.0001249313354,"wires":[[]]},{"id":"804c8939.b926f8","type":"websocket out","z":"2237b788.d6d558","name":"DpaRequest","server":"","client":"a8bc67cc.6fd248","x":1278.0000610351562,"y":523.999927520752,"wires":[]},{"id":"4153533b.fdf7fc","type":"websocket in","z":"2237b788.d6d558","name":"DpaResponse","server":"","client":"a8bc67cc.6fd248","x":191,"y":758.9999389648438,"wires":[["1c1637a2.f3ee68","c14b8226.cc6e7"]]},{"id":"1c1637a2.f3ee68","type":"debug","z":"2237b788.d6d558","name":"DpaResponse","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":439,"y":805.3332719802856,"wires":[]},{"id":"42486127.71fde","type":"debug","z":"2237b788.d6d558","name":"DpaRequest","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1259.0000381469727,"y":221.33327960968018,"wires":[]},{"id":"356ef6de.ec367a","type":"switch","z":"2237b788.d6d558","name":"Channel","property":"globalChannel","propertyType":"global","rules":[{"t":"eq","v":"mqtt","vt":"str"},{"t":"eq","v":"websocket","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1108.0000305175781,"y":472.3332633972168,"wires":[["301b5da7.03e992"],["804c8939.b926f8"]]},{"id":"5f4a922c.594e4c","type":"mqtt in","z":"445463df.bb7f9c","name":"DpaResponse","topic":"Iqrf/DpaResponse","qos":"2","broker":"93b69e15.901c7","x":136,"y":1078.000527381897,"wires":[["1591bda0.59efb2","ee1d3015.5d5ed"]]},{"id":"5c69147d.5b5f4c","type":"mqtt out","z":"445463df.bb7f9c","name":"DpaRequest","topic":"Iqrf/DpaRequest","qos":"","retain":"","broker":"93b69e15.901c7","x":1260.0000610351562,"y":468.99998474121094,"wires":[]},{"id":"ebe51fab.1b218","type":"debug","z":"445463df.bb7f9c","name":"ValidatorRsp","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1158.0000076293945,"y":1185.0003843307495,"wires":[]},{"id":"56550176.a6cb3","type":"json-schema-validator","z":"445463df.bb7f9c","name":"iqrfBinaryoutput_SetOutput-response","func":"{\n    \"title\": \"iqrfBinaryoutput_SetOutput-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Binary Output - Set Output request.\",\n            \"enum\": [\n                \"iqrfBinaryoutput_SetOutput\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"prevVals\": {\n                                    \"type\": \"array\",\n                                    \"description\": \"Array of boolean true/false values specifying the previous state of each binary output. false is returned for unimplemented binary outputs.\",\n                                    \"items\": {\n                                        \"type\": \"boolean\"\n                                    }\n                                }\n                            }\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}\n","x":723.0001373291016,"y":1207.0007276535034,"wires":[["ebe51fab.1b218","28b2583c.67db28"]]},{"id":"b3c2f492.0d6f08","type":"json-schema-validator","z":"445463df.bb7f9c","name":"iqrfBinaryoutput_SetOutput-request","func":"{\n    \"title\": \"iqrfBinaryoutput_SetOutput-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Binary Output - Set Output request.\",\n            \"enum\": [\n                \"iqrfBinaryoutput_SetOutput\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"binOuts\": {\n                                    \"type\": \"array\",\n                                    \"description\": \"Array of objects with the following fields.\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"index\": {\n                                                \"type\": \"integer\",\n                                                \"description\": \"Zero based index of the light to set.\"\n                                            },\n                                            \"state\": {\n                                                \"type\": \"boolean\",\n                                                \"description\": \"true to set ON state, false to set OFF state.\"\n                                            },\n                                            \"time\": {\n                                                \"type\": \"integer\",\n                                                \"description\": \"Time in seconds. Allowed values are <1;127> or 60*<1;127>.\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"index\",\n                                            \"state\"\n                                        ]\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}\n","x":761.9999389648438,"y":348.00002670288086,"wires":[["db3ecafa.c86a88","24268994.907146"]]},{"id":"db3ecafa.c86a88","type":"debug","z":"445463df.bb7f9c","name":"ValidatorReq","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1022.0000305175781,"y":280.999963760376,"wires":[]},{"id":"1591bda0.59efb2","type":"json","z":"445463df.bb7f9c","name":"","property":"payload","action":"","pretty":false,"x":297.9999656677246,"y":1207.0004720687866,"wires":[["acdcd168.15451","3b754288.c0b57e"]]},{"id":"24268994.907146","type":"switch","z":"445463df.bb7f9c","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1045.0002746582031,"y":370.99998569488525,"wires":[[],["2428f885.a65148","e5d990ba.8115d"]]},{"id":"2edb683a.edccb8","type":"switch","z":"445463df.bb7f9c","name":"status","property":"payload.data.status","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"neq","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1159.0000114440918,"y":1393.0005531311035,"wires":[[],[]]},{"id":"acdcd168.15451","type":"switch","z":"445463df.bb7f9c","name":"mType","property":"payload.mType","propertyType":"msg","rules":[{"t":"eq","v":"iqrfBinaryoutput_SetOutput","vt":"str"},{"t":"eq","v":"iqrfBinaryoutput_Enumerate","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":426.00007247924805,"y":1143.0007133483887,"wires":[["56550176.a6cb3"],["c801426.348a2c"]]},{"id":"f77d2106.70b08","type":"function","z":"445463df.bb7f9c","name":"iqrfBinaryoutput_SetOutput","func":"var req = \n{\n    \"mType\":\"iqrfBinaryoutput_SetOutput\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": 2,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"binOuts\": [\n                    {\n                      \"index\": flow.get('count'),\n                      \"state\": true,\n                      \"time\": 1\n                    }\n                ]\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":452.9999465942383,"y":149.00000381469727,"wires":[["b3c2f492.0d6f08"]]},{"id":"28b2583c.67db28","type":"switch","z":"445463df.bb7f9c","name":"Valid","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1066.0000076293945,"y":1302.0007123947144,"wires":[[],["2edb683a.edccb8"]]},{"id":"15696657.8068ba","type":"inject","z":"445463df.bb7f9c","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":92.99991989135742,"y":383.00000190734863,"wires":[["c5a7b18d.6e12"]]},{"id":"1643b09e.bb5a0f","type":"catch","z":"445463df.bb7f9c","name":"Invalid Rsp","scope":["56550176.a6cb3"],"x":925.0000801086426,"y":1128.0003852844238,"wires":[["ebe51fab.1b218"]]},{"id":"3b754288.c0b57e","type":"file","z":"445463df.bb7f9c","name":"iqrfBinaryoutputApiTest","filename":"/home/spinarr/iqrf/iqrfBinaryoutputApiTest.txt","appendNewline":true,"createDir":true,"overwriteFile":"false","x":373.99998474121094,"y":1363.000680923462,"wires":[]},{"id":"5d48ea96.a3bab4","type":"status","z":"445463df.bb7f9c","name":"","scope":["2edb683a.edccb8"],"x":1204,"y":1469.0005865097046,"wires":[[]]},{"id":"edf39feb.72051","type":"switch","z":"445463df.bb7f9c","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":224.00004196166992,"y":193.9999656677246,"wires":[["f77d2106.70b08"],["ca36319f.3a363"]]},{"id":"22d4ec35.00d3f4","type":"websocket out","z":"445463df.bb7f9c","name":"DpaRequest","server":"","client":"a8bc67cc.6fd248","x":1260.000057220459,"y":573.0000314712524,"wires":[]},{"id":"e190e0b2.afedb","type":"websocket in","z":"445463df.bb7f9c","name":"DpaResponse","server":"","client":"a8bc67cc.6fd248","x":185.00000381469727,"y":1000.0003614425659,"wires":[["ee1d3015.5d5ed","1591bda0.59efb2"]]},{"id":"ca36319f.3a363","type":"function","z":"445463df.bb7f9c","name":"iqrfBinaryoutput_SetOutput","func":"var req = \n{\n    \"mType\":\"iqrfBinaryoutput_SetOutput\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"req\": {\n            \"nAdr\": 2,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"binOuts\": [\n                    {\n                      \"index\": flow.get('count'),\n                      \"state\": true,\n                      \"time\": 1\n                    }\n                ]\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":428.0000915527344,"y":251.33332061767578,"wires":[["b3c2f492.0d6f08"]]},{"id":"2428f885.a65148","type":"debug","z":"445463df.bb7f9c","name":"DpaRequest","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1246.0000381469727,"y":306.3332996368408,"wires":[]},{"id":"ee1d3015.5d5ed","type":"debug","z":"445463df.bb7f9c","name":"DpaResponse","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":420.9999885559082,"y":1030.0002241134644,"wires":[]},{"id":"e5d990ba.8115d","type":"switch","z":"445463df.bb7f9c","name":"Channel","property":"globalChannel","propertyType":"global","rules":[{"t":"eq","v":"mqtt","vt":"str"},{"t":"eq","v":"websocket","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1035.0000305175781,"y":529.3333921432495,"wires":[["5c69147d.5b5f4c"],["22d4ec35.00d3f4"]]},{"id":"b15930c2.e26c7","type":"json-schema-validator","z":"445463df.bb7f9c","name":"iqrfBinaryoutput_Enumerate-request","func":"{\n    \"title\": \"iqrfBinaryoutput_Enumerate-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Binary Output - Enumerate request.\",\n            \"enum\": [\n                \"iqrfBinaryoutput_Enumerate\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":772.0000228881836,"y":787.0001316070557,"wires":[["4f80bcee.b802a4","f9f580c4.6db1e"]]},{"id":"4f80bcee.b802a4","type":"debug","z":"445463df.bb7f9c","name":"ValidatorReq","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":946.0003509521484,"y":665.0000267028809,"wires":[]},{"id":"f9f580c4.6db1e","type":"switch","z":"445463df.bb7f9c","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1077.000358581543,"y":742.0001106262207,"wires":[[],["f633c8e9.849648","e5d990ba.8115d"]]},{"id":"5510b55.1c91d4c","type":"function","z":"445463df.bb7f9c","name":"iqrfBinaryoutput_Enumerate","func":"var req = \n{\n    \"mType\":\"iqrfBinaryoutput_Enumerate\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": 2,\n            \"hwpId\": 65535,\n            \"param\": {}\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":437.0000534057617,"y":756.0001068115234,"wires":[["b15930c2.e26c7"]]},{"id":"8b14f4ff.64c728","type":"inject","z":"445463df.bb7f9c","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":85.00004577636719,"y":672.0001087188721,"wires":[["574a9a27.9fc984"]]},{"id":"574a9a27.9fc984","type":"switch","z":"445463df.bb7f9c","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":227.00015258789062,"y":795.0000677108765,"wires":[["5510b55.1c91d4c"],["d50cedc6.a804e"]]},{"id":"d50cedc6.a804e","type":"function","z":"445463df.bb7f9c","name":"iqrfBinaryoutput_Enumerate","func":"var req = \n{\n    \"mType\":\"iqrfBinaryoutput_Enumerate\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"req\": {\n            \"nAdr\": 2,\n            \"hwpId\": 65535,\n            \"param\": {}\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":435.0001983642578,"y":820.3334035873413,"wires":[["b15930c2.e26c7"]]},{"id":"f633c8e9.849648","type":"debug","z":"445463df.bb7f9c","name":"DpaRequest","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1174.0002002716064,"y":883.3333625793457,"wires":[]},{"id":"c801426.348a2c","type":"json-schema-validator","z":"445463df.bb7f9c","name":"iqrfBinaryoutput_Enumerate-response","func":"{\n    \"title\": \"iqrfBinaryoutput_Enumerate-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Binary Output - Enumerate response.\",\n            \"enum\": [\n                \"iqrfBinaryoutput_Enumerate\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"binOuts\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"Number of implemented binary outputs.\"\n                                }\n                            }\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":726.0000152587891,"y":1304.3336973190308,"wires":[["ebe51fab.1b218","28b2583c.67db28"]]},{"id":"c5a7b18d.6e12","type":"function","z":"445463df.bb7f9c","name":"count","func":"value = flow.get('count') || 0\n\nvalue++\nif(value > 3)\n    value = 0\n\nflow.set('count', value)\nreturn { payload : value };\n","outputs":1,"noerr":0,"x":157.00000762939453,"y":292.0000123977661,"wires":[["edf39feb.72051"]]},{"id":"470206e5.290178","type":"mqtt out","z":"83d8485.e4c1ab8","name":"DpaRequest","topic":"Iqrf/DpaRequest","qos":"","retain":"","broker":"93b69e15.901c7","x":1272.000015258789,"y":419.9999809265137,"wires":[]},{"id":"17eed860.59ee78","type":"json-schema-validator","z":"83d8485.e4c1ab8","name":"iqrfLight_SetPower-request","func":"{\n    \"title\": \"iqrfLight_SetPower-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Light - Set Power request.\",\n            \"enum\": [\n                \"iqrfLight_SetPower\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n\t\t\t\t\t\t\t\t\"lights\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"description\": \"Array of objects with the following fields.\",\n\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\t\t\t\"index\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"description\": \"Zero based index of the light to set.\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\"power\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"description\": \"Power level of the light from range <0;100>. Value 127 keeps current power level allowing to only report power level.\"\n\t\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\t\"time\": {\n\t\t\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\t\t\t\t\"description\": \"Time in seconds. Allowed values are <1;127> or 60*<1;127>.\"\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\t\t\t\t\t\"index\",\n\t\t\t\t\t\t\t\t\t\t\t\"power\"\n\t\t\t\t\t\t\t\t\t\t]\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n                            }\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}\n","x":757.9998931884766,"y":160.00008583068848,"wires":[["f28d2fc1.14144","f8128437.37b488"]]},{"id":"f28d2fc1.14144","type":"debug","z":"83d8485.e4c1ab8","name":"ValidatorReq","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1073.0000305175781,"y":120.99996566772461,"wires":[]},{"id":"f8128437.37b488","type":"switch","z":"83d8485.e4c1ab8","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1060.0002746582031,"y":252.99996852874756,"wires":[[],["5346d21d.37a47c","7bfef349.3896ac"]]},{"id":"d9b12bb7.38a068","type":"function","z":"83d8485.e4c1ab8","name":"iqrfLight_SetPower","func":"var req = \n{\n    \"mType\":\"iqrfLight_SetPower\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": 4,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"lights\": [\n                    {\n                        \"index\": 0,\n                        \"power\": 70\n                    }\n                ]\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":467.9999313354492,"y":102.00000190734863,"wires":[["17eed860.59ee78"]]},{"id":"81fd12c0.2b9ef","type":"inject","z":"83d8485.e4c1ab8","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":98.99987411499023,"y":144.0000238418579,"wires":[["d4cf8fad.dff05"]]},{"id":"d4cf8fad.dff05","type":"switch","z":"83d8485.e4c1ab8","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":248.0000057220459,"y":143.99997329711914,"wires":[["d9b12bb7.38a068"],["12cb3695.ecedc9"]]},{"id":"afb9ccc5.8438","type":"websocket out","z":"83d8485.e4c1ab8","name":"DpaRequest","server":"","client":"a8bc67cc.6fd248","x":1272.0000114440918,"y":524.0000276565552,"wires":[]},{"id":"12cb3695.ecedc9","type":"function","z":"83d8485.e4c1ab8","name":"iqrfLight_SetPower","func":"var req = \n{\n    \"mType\":\"iqrfLight_SetPower\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"req\": {\n            \"nAdr\": 4,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"lights\": [\n                    {\n                        \"index\": 0,\n                        \"power\": 70\n                    }\n                ]\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":458.0000915527344,"y":188.33331775665283,"wires":[["17eed860.59ee78"]]},{"id":"5346d21d.37a47c","type":"debug","z":"83d8485.e4c1ab8","name":"DpaRequest","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1257.9999923706055,"y":257.33329582214355,"wires":[]},{"id":"7bfef349.3896ac","type":"switch","z":"83d8485.e4c1ab8","name":"Channel","property":"globalChannel","propertyType":"global","rules":[{"t":"eq","v":"mqtt","vt":"str"},{"t":"eq","v":"websocket","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1093.0000305175781,"y":460.33338737487793,"wires":[["470206e5.290178"],["afb9ccc5.8438"]]},{"id":"d0fc2113.732d6","type":"json-schema-validator","z":"83d8485.e4c1ab8","name":"iqrfLight_Enumerate-request","func":"{\n    \"title\": \"iqrfLight_Enumerate-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Light - Enumeration request.\",\n            \"enum\": [\n                \"iqrfLight_Enumerate\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {}\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":742.0000152587891,"y":813.0002212524414,"wires":[["eac544e.73258b8","6fa2045f.9001fc"]]},{"id":"eac544e.73258b8","type":"debug","z":"83d8485.e4c1ab8","name":"ValidatorReq","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":966.0003051757812,"y":692.0000591278076,"wires":[]},{"id":"6fa2045f.9001fc","type":"switch","z":"83d8485.e4c1ab8","name":"","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1097.0003128051758,"y":769.0001430511475,"wires":[[],["70346d40.344e04","7bfef349.3896ac"]]},{"id":"bd24e53b.c56e98","type":"function","z":"83d8485.e4c1ab8","name":"iqrfLight_Enumerate","func":"var req = \n{\n    \"mType\":\"iqrfLight_Enumerate\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": 4,\n            \"hwpId\": 65535,\n            \"param\": {}\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":437.00000762939453,"y":783.0001392364502,"wires":[["d0fc2113.732d6"]]},{"id":"838c9683.e68478","type":"inject","z":"83d8485.e4c1ab8","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":105,"y":699.0001411437988,"wires":[["d78061dd.5efb3"]]},{"id":"d78061dd.5efb3","type":"switch","z":"83d8485.e4c1ab8","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":247.00010681152344,"y":822.0001001358032,"wires":[["bd24e53b.c56e98"],["aa6dbeb1.8bffb"]]},{"id":"aa6dbeb1.8bffb","type":"function","z":"83d8485.e4c1ab8","name":"iqrfLight_Enumerate","func":"var req = \n{\n    \"mType\":\"iqrfLight_Enumerate\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"req\": {\n            \"nAdr\": 4,\n            \"hwpId\": 65535,\n            \"param\": {}\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":435.0001525878906,"y":847.3334360122681,"wires":[["d0fc2113.732d6"]]},{"id":"70346d40.344e04","type":"debug","z":"83d8485.e4c1ab8","name":"DpaRequest","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1194.0001544952393,"y":910.3333950042725,"wires":[]},{"id":"fd2bc78.3bde938","type":"mqtt in","z":"83d8485.e4c1ab8","name":"DpaResponse","topic":"Iqrf/DpaResponse","qos":"2","broker":"93b69e15.901c7","x":137,"y":1203.3334045410156,"wires":[["916759d.be478a8","38bf8a13.5f93f6"]]},{"id":"4bbb36a4.09e328","type":"debug","z":"83d8485.e4c1ab8","name":"ValidatorRsp","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1159.0000076293945,"y":1310.3332614898682,"wires":[]},{"id":"66b9e793.c53a08","type":"json-schema-validator","z":"83d8485.e4c1ab8","name":"iqrfLight_SetPower-response","func":"{\n    \"title\": \"iqrfLight_SetPower-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Light - Set Power response.\",\n            \"enum\": [\n                \"iqrfLight_SetPower\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"prevVals\": {\n                                    \"type\": \"array\",\n                                    \"description\": \"Array integers corresponding to the previous power level of each selected light. If the unimplemented light was selected the returned value is 0.\",\n                                    \"items\": {\n                                        \"type\": \"integer\"\n                                    }\n                                }\n                            }\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}","x":705.0001373291016,"y":1261.3338994979858,"wires":[["4bbb36a4.09e328","fc054c75.b1b0e"]]},{"id":"916759d.be478a8","type":"json","z":"83d8485.e4c1ab8","name":"","property":"payload","action":"","pretty":false,"x":298.9999656677246,"y":1332.3333492279053,"wires":[["76d6bc47.e93184","9ed6e803.70b028"]]},{"id":"601ef458.f3fe1c","type":"switch","z":"83d8485.e4c1ab8","name":"status","property":"payload.data.status","propertyType":"msg","rules":[{"t":"eq","v":"0","vt":"num"},{"t":"neq","v":"0","vt":"num"}],"checkall":"true","repair":false,"outputs":2,"x":1160.0000114440918,"y":1518.3334302902222,"wires":[[],[]]},{"id":"76d6bc47.e93184","type":"switch","z":"83d8485.e4c1ab8","name":"mType","property":"payload.mType","propertyType":"msg","rules":[{"t":"eq","v":"iqrfLight_SetPower","vt":"str"},{"t":"eq","v":"iqrfLight_IncrementPower","vt":"str"},{"t":"eq","v":"iqrfLight_DecrementPower","vt":"str"},{"t":"eq","v":"iqrfLight_Enumerate","vt":"str"}],"checkall":"true","repair":false,"outputs":4,"x":427.00007247924805,"y":1268.3335905075073,"wires":[["66b9e793.c53a08"],["ae2e4553.7fc738"],["355c84be.491e8c"],["dc3a5aed.7bcce8"]]},{"id":"fc054c75.b1b0e","type":"switch","z":"83d8485.e4c1ab8","name":"Valid","property":"payload","propertyType":"msg","rules":[{"t":"eq","v":"Invalid JSON","vt":"str"},{"t":"neq","v":"Invalid JSON","vt":"str"}],"checkall":"true","repair":false,"outputs":2,"x":1067.0000076293945,"y":1427.333589553833,"wires":[[],["601ef458.f3fe1c"]]},{"id":"9790c5e6.9bf058","type":"catch","z":"83d8485.e4c1ab8","name":"Invalid Rsp","scope":["66b9e793.c53a08"],"x":995.0001068115234,"y":1169.3333349227905,"wires":[["4bbb36a4.09e328"]]},{"id":"9ed6e803.70b028","type":"file","z":"83d8485.e4c1ab8","name":"iqrfLightApiTest","filename":"/home/spinarr/iqrf/iqrfLightApiTest.txt","appendNewline":true,"createDir":true,"overwriteFile":"false","x":344.99998474121094,"y":1488.3335580825806,"wires":[]},{"id":"af44a32a.34bd8","type":"status","z":"83d8485.e4c1ab8","name":"","scope":["601ef458.f3fe1c"],"x":1205,"y":1594.3334636688232,"wires":[[]]},{"id":"d1c5a382.1128d","type":"websocket in","z":"83d8485.e4c1ab8","name":"DpaResponse","server":"","client":"a8bc67cc.6fd248","x":186.00000381469727,"y":1125.3332386016846,"wires":[["38bf8a13.5f93f6","916759d.be478a8"]]},{"id":"38bf8a13.5f93f6","type":"debug","z":"83d8485.e4c1ab8","name":"DpaResponse","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":421.9999885559082,"y":1155.333101272583,"wires":[]},{"id":"dc3a5aed.7bcce8","type":"json-schema-validator","z":"83d8485.e4c1ab8","name":"iqrfLight_Enumerate-response","func":"{\n    \"title\": \"iqrfLight_Enumerate-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Light - Enumeration response.\",\n            \"enum\": [\n                \"iqrfLight_Enumerate\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"lights\": {\n                                    \"type\": \"integer\",\n                                    \"description\": \"Number of implemented binary lights.\"\n                                }\n                            }\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}\n","x":711.0000152587891,"y":1611.6665892601013,"wires":[["4bbb36a4.09e328","fc054c75.b1b0e"]]},{"id":"fc185c1c.c1c32","type":"json-schema-validator","z":"83d8485.e4c1ab8","name":"iqrfLight_IncrementPower-request","func":"{\n    \"title\": \"iqrfLight_IncrementPower-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Light - Increment Power request.\",\n            \"enum\": [\n                \"iqrfLight_IncrementPower\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"lights\": {\n                                    \"type\": \"array\",\n                                    \"description\": \"Array of objects with the following fields.\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"index\": {\n                                                \"type\": \"integer\",\n                                                \"description\": \"Zero based index of the light to set.\"\n                                            },\n                                            \"power\": {\n                                                \"type\": \"integer\",\n                                                \"description\": \"Increases power level.\"\n                                            },\n                                            \"time\": {\n                                                \"type\": \"integer\",\n                                                \"description\": \"Time in seconds. Allowed values are <1;127> or 60*<1;127>.\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"index\",\n                                            \"power\"\n                                        ]\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}\n","x":772.0000190734863,"y":361,"wires":[["f28d2fc1.14144","f8128437.37b488"]]},{"id":"5c383a25.333434","type":"function","z":"83d8485.e4c1ab8","name":"iqrfLight_IncrementPower","func":"var req = \n{\n    \"mType\":\"iqrfLight_IncrementPower\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": 4,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"lights\": [\n                    {\n                        \"index\": 0,\n                        \"power\": 10\n                    }\n                ]\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":460.0000915527344,"y":295.9999475479126,"wires":[["fc185c1c.c1c32"]]},{"id":"79c0c63f.a1fbc8","type":"inject","z":"83d8485.e4c1ab8","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":103,"y":343.9999542236328,"wires":[["a813ccf0.80e83"]]},{"id":"a813ccf0.80e83","type":"switch","z":"83d8485.e4c1ab8","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":240.00014877319336,"y":343.99992847442627,"wires":[["5c383a25.333434"],["cd87e7c2.a05cc8"]]},{"id":"cd87e7c2.a05cc8","type":"function","z":"83d8485.e4c1ab8","name":"iqrfLight_IncrementPower","func":"var req = \n{\n    \"mType\":\"iqrfLight_IncrementPower\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"req\": {\n            \"nAdr\": 4,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"lights\": [\n                    {\n                        \"index\": 0,\n                        \"power\": 10\n                    }\n                ]\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":463.0002136230469,"y":378.3332633972168,"wires":[["fc185c1c.c1c32"]]},{"id":"ae2e4553.7fc738","type":"json-schema-validator","z":"83d8485.e4c1ab8","name":"iqrfLight_IncrementPower-response","func":"{\n    \"title\": \"iqrfLight_IncrementPower\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Light - Increment Power response.\",\n            \"enum\": [\n                \"iqrfLight_IncrementPower\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"prevVals\": {\n                                    \"type\": \"array\",\n                                    \"description\": \"Array integers corresponding to the previous power level of each selected light. If the unimplemented light was selected the returned value is 0.\",\n                                    \"items\": {\n                                        \"type\": \"integer\"\n                                    }\n                                }\n                            }\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}\n","x":721.0000152587891,"y":1374.666748046875,"wires":[["4bbb36a4.09e328","fc054c75.b1b0e"]]},{"id":"d2b9239b.266ad","type":"json-schema-validator","z":"83d8485.e4c1ab8","name":"iqrfLight_DecrementPower-request","func":"{\n    \"title\": \"iqrfLight_DecrementPower-request\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Light - Decrement Power request.\",\n            \"enum\": [\n                \"iqrfLight_DecrementPower\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"req\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"param\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"lights\": {\n                                    \"type\": \"array\",\n                                    \"description\": \"Array of objects with the following fields.\",\n                                    \"items\": {\n                                        \"type\": \"object\",\n                                        \"properties\": {\n                                            \"index\": {\n                                                \"type\": \"integer\",\n                                                \"description\": \"Zero based index of the light to set.\"\n                                            },\n                                            \"power\": {\n                                                \"type\": \"integer\",\n                                                \"description\": \"Increases power level.\"\n                                            },\n                                            \"time\": {\n                                                \"type\": \"integer\",\n                                                \"description\": \"Time in seconds. Allowed values are <1;127> or 60*<1;127>.\"\n                                            }\n                                        },\n                                        \"required\": [\n                                            \"index\",\n                                            \"power\"\n                                        ]\n                                    }\n                                }\n                            }\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"param\"\n                    ]\n                },\n                \"returnVerbose\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Flag that includes additional parameters in the response.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"req\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}\n","x":768,"y":544,"wires":[["f8128437.37b488","f28d2fc1.14144"]]},{"id":"2528e7d0.5ff648","type":"function","z":"83d8485.e4c1ab8","name":"iqrfLight_DecrementPower","func":"var req = \n{\n    \"mType\":\"iqrfLight_DecrementPower\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"timeout\":1000,\n        \"req\": {\n            \"nAdr\": 4,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"lights\": [\n                    {\n                        \"index\": 0,\n                        \"power\": 10\n                    }\n                ]\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":473.00003814697266,"y":477.99993228912354,"wires":[["d2b9239b.266ad"]]},{"id":"88bb8879.58b498","type":"inject","z":"83d8485.e4c1ab8","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":98.99998092651367,"y":526.9999542236328,"wires":[["ef017e1e.f70f4"]]},{"id":"ef017e1e.f70f4","type":"switch","z":"83d8485.e4c1ab8","name":"","property":"globalTimeout","propertyType":"global","rules":[{"t":"true"},{"t":"false"}],"checkall":"true","repair":false,"outputs":2,"x":248.00011253356934,"y":526.999903678894,"wires":[["2528e7d0.5ff648"],["9a550760.8745d8"]]},{"id":"9a550760.8745d8","type":"function","z":"83d8485.e4c1ab8","name":"iqrfLight_DecrementPower","func":"var req = \n{\n    \"mType\":\"iqrfLight_DecrementPower\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"req\": {\n            \"nAdr\": 4,\n            \"hwpId\": 65535,\n            \"param\": {\n                \"lights\": [\n                    {\n                        \"index\": 0,\n                        \"power\": 10\n                    }\n                ]\n            }\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":472.00019454956055,"y":582.3332633972168,"wires":[["d2b9239b.266ad"]]},{"id":"355c84be.491e8c","type":"json-schema-validator","z":"83d8485.e4c1ab8","name":"iqrfLight_DecrementPower-response","func":"{\n    \"title\": \"iqrfLight_DecrementPower-response\",\n    \"type\": \"object\",\n    \"properties\": {\n        \"mType\": {\n            \"type\": \"string\",\n            \"description\": \"Standard peripheral Light - Decrement Power response.\",\n            \"enum\": [\n                \"iqrfLight_DecrementPower\"\n            ]\n        },\n        \"data\": {\n            \"type\": \"object\",\n            \"properties\": {\n                \"msgId\": {\n                    \"type\": \"string\",\n                    \"description\": \"Message identification for binding request with response.\"\n                },\n                \"timeout\": {\n                    \"type\": \"integer\",\n                    \"description\": \"Timeout to wait for IQRF DPA response.\"\n                },\n                \"rsp\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"nAdr\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Network device address.\"\n                        },\n                        \"hwpId\": {\n                            \"type\": \"integer\",\n                            \"description\": \"Hardware profile identification.\"\n                        },\n                        \"rCode\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA error code.\"\n                        },\n                        \"dpaVal\": {\n                            \"type\": \"integer\",\n                            \"description\": \"DPA value.\"\n                        },\n                        \"result\": {\n                            \"type\": \"object\",\n                            \"properties\": {\n                                \"prevVals\": {\n                                    \"type\": \"array\",\n                                    \"description\": \"Array integers corresponding to the previous power level of each selected light. If the unimplemented light was selected the returned value is 0.\",\n                                    \"items\": {\n                                        \"type\": \"integer\"\n                                    }\n                                }\n                            }\n                        },\n                        \"errorStr\": {\n                            \"type\": \"string\",\n                            \"description\": \"Error description from JS drivers.\"\n                        }\n                    },\n                    \"required\": [\n                        \"nAdr\",\n                        \"hwpId\",\n                        \"rCode\",\n                        \"dpaVal\"\n                    ]\n                },\n                \"raw\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"request\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA request.\"\n                        },\n                        \"requestTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"confirmation\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA confirmation.\"\n                        },\n                        \"confirmationTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        },\n                        \"response\": {\n                            \"type\": \"string\",\n                            \"description\": \"Binary buffer with DPA response.\"\n                        },\n                        \"responseTs\": {\n                            \"type\": \"string\",\n                            \"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n                        }\n                    },\n                    \"required\": [\n                        \"request\",\n                        \"requestTs\",\n                        \"confirmation\",\n                        \"confirmationTs\",\n                        \"response\",\n                        \"responseTs\"\n                    ]\n                },\n                \"insId\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon instance identification.\"\n                },\n                \"status\": {\n                    \"type\": \"integer\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status.\"\n                },\n                \"statusStr\": {\n                    \"type\": \"string\",\n                    \"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n                }\n            },\n            \"required\": [\n                \"msgId\",\n                \"rsp\",\n                \"status\"\n            ]\n        }\n    },\n    \"required\": [\n        \"mType\",\n        \"data\"\n    ]\n}\n","x":735,"y":1496.6666259765625,"wires":[["fc054c75.b1b0e","4bbb36a4.09e328"]]},{"id":"7fe77289.7b72ec","type":"function","z":"2237b788.d6d558","name":"iqmeshNetwork_OtaUpload","func":"var req = \n{\n    \"mType\":\"iqmeshNetwork_OtaUpload\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"repeat\": 1,\n        \"req\": {\n            \"deviceAddr\": [3],\n            \"fileName\": \"hex/CustomDpaHandler-LED-Red-On-7xD-V303-180316.hex\",\n            \"startMemAddr\": 0,\n            \"loadingAction\": \"WithCodeLoading\"\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":396.0000686645508,"y":300.00000858306885,"wires":[["7c274e60.8bdce"]]},{"id":"7c274e60.8bdce","type":"json-schema-validator","z":"2237b788.d6d558","name":"iqmeshNetwork_OtaUpload-request","func":"{\n    \"title\": \"iqmeshNetwork_OtaUpload-request\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"mType\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"IQMESH Network management - Upload hex or iqrf file request.\",\n\t\t\t\"enum\": [\n\t\t\t\t\"iqmeshNetwork_OtaUpload\"\n\t\t\t]\n\t\t},\n\t\t\"data\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"msgId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"Message identification for binding request with response.\"\n\t\t\t\t},\n\t\t\t\t\"repeat\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"description\": \"Number of repetitions of DPA messages.\",\n\t\t\t\t\t\"default\": 1\n\t\t\t\t},\n\t\t\t\t\"req\": {\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"deviceAddr\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"description\": \"Device address(es) to write the hex or iqrf file.\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"fileName\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"description\": \"Full name of file with source code to load.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"startMemAddr\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Start address on which will be the data saved into memory.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"loadingAction\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"description\": \"Loading action - WithoutCodeLoading, WithCodeLoading.\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"deviceAddr\",\n\t\t\t\t\t\t\"fileName\",\n\t\t\t\t\t\t\"startMemAddr\",\n\t\t\t\t\t\t\"loadingAction\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"returnVerbose\": {\n\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\"description\": \"Flag that includes additional parameters in the response.\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"required\": [\n\t\t\t\t\"msgId\",\n\t\t\t\t\"req\"\n\t\t\t]\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"mType\",\n\t\t\"data\"\n\t]\n}","x":761.0000152587891,"y":269.00004863739014,"wires":[["b95c0448.34f3e8","f3221f29.86d95"]]},{"id":"6233004b.85163","type":"json-schema-validator","z":"2237b788.d6d558","name":"iqmeshNetwork_OtaUpload-response","func":"{\n    \"title\": \"iqmeshNetwork_OtaUpload-response\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"mType\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"IQMESH Network management - Upload hex or iqrf file response.\",\n\t\t\t\"enum\": [\n\t\t\t\t\"iqmeshNetwork_OtaUpload\"\n\t\t\t]\n\t\t},\n\t\t\"data\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"msgId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"Message identification for binding request with response.\"\n\t\t\t\t},\n\t\t\t\t\"rsp\": {\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"description\": \"Returns following values, see its description.\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"deviceAddr\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Device address to write the configuration to. Broadcast address is also allowed.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"writeSuccess\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If sets, then selected file has been successfully loaded.\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"deviceAddr\",\n\t\t\t\t\t\t\"writeSuccess\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"raw\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"description\": \"Returns array of objects req-cnf-rsp, see its description.\",\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"request\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA request.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"requestTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"confirmation\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA confirmation.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"confirmationTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"response\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA response.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"responseTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\t\"request\",\n\t\t\t\t\t\t\t\"requestTs\",\n\t\t\t\t\t\t\t\"confirmation\",\n\t\t\t\t\t\t\t\"confirmationTs\",\n\t\t\t\t\t\t\t\"response\",\n\t\t\t\t\t\t\t\"responseTs\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"insId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon instance identification.\"\n\t\t\t\t},\n\t\t\t\t\"status\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon API (general or mType) status.\"\n\t\t\t\t},\n\t\t\t\t\"statusStr\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"required\": [\n\t\t\t\t\"msgId\",\n\t\t\t\t\"rsp\",\n\t\t\t\t\"status\"\n\t\t\t]\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"mType\",\n\t\t\"data\"\n\t]\n}","x":759.0000152587891,"y":969.666711807251,"wires":[["9920ed30.fc0d","8d35c9f9.ea7628"]]},{"id":"cd6a845b.06e058","type":"inject","z":"2237b788.d6d558","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":113,"y":362.6666774749756,"wires":[["7fe77289.7b72ec"]]},{"id":"e6b680e3.7ada8","type":"function","z":"2237b788.d6d558","name":"iqmeshNetwork_SmartConnect","func":"var req = \n{\n  \"mType\": \"iqmeshNetwork_SmartConnect\",\n  \"data\": {\n    \"msgId\": \"test\",\n    \"repeat\": 1,\n    \"req\": {\n      \"deviceAddr\": 5,\n      \"smartConnectCode\": \"kYD2B8ZYDP44wRtw3MFfUfTeDmUUJWn4TY65z\"\n    },\n    \"returnVerbose\": global.get('globalVerbose')\n  }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":386.0000457763672,"y":432.00001287460327,"wires":[["bab30f2d.d52ef"]]},{"id":"28b29325.c240dc","type":"inject","z":"2237b788.d6d558","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":110,"y":458,"wires":[["e6b680e3.7ada8"]]},{"id":"bab30f2d.d52ef","type":"json-schema-validator","z":"2237b788.d6d558","name":"iqmeshNetwork_SmartConnect-request","func":"{\n    \"title\": \"iqmeshNetwork_SmartConnect-request\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"mType\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"IQMESH Network management - Smart Connect request.\",\n\t\t\t\"enum\": [\n\t\t\t\t\"iqmeshNetwork_SmartConnect\"\n\t\t\t]\n\t\t},\n\t\t\"data\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"msgId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"Message identification for binding request with response.\"\n\t\t\t\t},\n\t\t\t\t\"repeat\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"description\": \"Number of repetitions of DPA messages.\",\n\t\t\t\t\t\"default\": 1\n\t\t\t\t},\n\t\t\t\t\"req\": {\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"deviceAddr\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Address to bond the device to.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"smartConnectCode\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"description\": \"Smart connect code of the device.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"bondingTestRetries\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Maximum number of FRCs used to test whether the Node was successfully bonded. If value is 0, then no test is performed and the command always succeeds.\",\n\t\t\t\t\t\t\t\"default\": 1\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"userData\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"description\": \"Optional data passed to the bonded node.\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\"minItems\": 4, \n\t\t\t\t\t\t\t\t\"maxItems\": 4,\n\t\t\t\t\t\t\t\t\"default\": 0\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"deviceAddr\",\n\t\t\t\t\t\t\"smartConnectCode\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"returnVerbose\": {\n\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\"description\": \"Flag that includes additional parameters in the response.\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"required\": [\n\t\t\t\t\"msgId\",\n\t\t\t\t\"req\"\n\t\t\t]\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"mType\",\n\t\t\"data\"\n\t]\n}\n","x":747.0001373291016,"y":419.0000114440918,"wires":[["b95c0448.34f3e8","f3221f29.86d95"]]},{"id":"e5aa8fe0.724e7","type":"json-schema-validator","z":"2237b788.d6d558","name":"iqmeshNetwork_SmartConnect-response","func":"{\n    \"title\": \"iqmeshNetwork_SmartConnect-response\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"mType\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"IQMESH Network management - Smart connect response.\",\n\t\t\t\"enum\": [\n\t\t\t\t\"iqmeshNetwork_SmartConnect\"\n\t\t\t]\n\t\t},\n\t\t\"data\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"msgId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"Message identification for binding request with response.\"\n\t\t\t\t},\n\t\t\t\t\"rsp\": {\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"description\": \"Returns following values, see its description.\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"assignedAddr\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Assigned address to the node.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"nodesNr\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Number of nodes in the network.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"hwpId\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Profile integer.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"manufacturer\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"description\": \"Manufacture name.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"product\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"description\": \"Product name.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"standards\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"description\": \"Supported standards by the device.\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"osRead\": {\n\t\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\t\"description\": \"Returns following values, see its description.\",\n\t\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\t\"mid\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\t\"description\": \"TR Module ID.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"osVersion\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\t\"description\": \"IQRF OS version.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"trMcuType\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\t\"description\": \"TR MCU type.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"osBuild\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\t\"description\": \"IQRF OS build.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"rssi\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\t\"description\": \"See lastRSSI at IQRF OS Reference Guide.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"supplyVoltage\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\t\"description\": \"Module supply voltage, contains real voltage value.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"flags\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\t\"description\": \"See DPA guide.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"slotLimits\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\t\t\"description\": \"See DPA guide.\"\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\"ibk\": {\n\t\t\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\t\t\"description\": \"Individual Bonding Key.\",\n\t\t\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\t\t\"maxItems\": 16\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\t\t\"mid\"\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"assignedAddr\",\n\t\t\t\t\t\t\"nodesNr\",\n\t\t\t\t\t\t\"hwpId\",\n\t\t\t\t\t\t\"manufacturer\",\n\t\t\t\t\t\t\"product\",\n\t\t\t\t\t\t\"standards\",\n\t\t\t\t\t\t\"osRead\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"raw\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"description\": \"Returns array of objects req-cnf-rsp, see its description.\",\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"request\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA request.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"requestTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"confirmation\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA confirmation.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"confirmationTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"response\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA response.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"responseTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\t\"request\",\n\t\t\t\t\t\t\t\"requestTs\",\n\t\t\t\t\t\t\t\"confirmation\",\n\t\t\t\t\t\t\t\"confirmationTs\",\n\t\t\t\t\t\t\t\"response\",\n\t\t\t\t\t\t\t\"responseTs\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"insId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon instance identification.\"\n\t\t\t\t},\n\t\t\t\t\"status\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon API (general or mType) status.\"\n\t\t\t\t},\n\t\t\t\t\"statusStr\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"required\": [\n\t\t\t\t\"msgId\",\n\t\t\t\t\"rsp\",\n\t\t\t\t\"status\"\n\t\t\t]\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"mType\",\n\t\t\"data\"\n\t]\n}\n","x":787.0000152587891,"y":1065.6667385101318,"wires":[["9920ed30.fc0d","8d35c9f9.ea7628"]]},{"id":"10d9ffdd.c2997","type":"function","z":"2237b788.d6d558","name":"iqmeshNetwork_WriteTrConf","func":"var req = \n{\n    \"mType\":\"iqmeshNetwork_WriteTrConf\",\n    \"data\": {\n        \"msgId\":\"test\",\n        \"repeat\": 1,\n        \"restart\": false,\n        \"req\": {\n            \"deviceAddr\": [3],\n            \"txPower\": 5\n        },\n        \"returnVerbose\": global.get('globalVerbose')\n    }\n}\n\nmsg.payload = req;\nreturn msg;\n","outputs":1,"noerr":0,"x":366.0000457763672,"y":575.0000162124634,"wires":[["285f0d03.be8732"]]},{"id":"b915995f.cb8b48","type":"inject","z":"2237b788.d6d558","name":"Start","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":109,"y":552,"wires":[["10d9ffdd.c2997"]]},{"id":"285f0d03.be8732","type":"json-schema-validator","z":"2237b788.d6d558","name":"iqmeshNetwork_WriteTrConf-request","func":"{\n    \"title\": \"iqmeshNetwork_WriteTrConf-request\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"mType\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"IQMESH Network management - Write TR configuration request.\",\n\t\t\t\"enum\": [\n\t\t\t\t\"iqmeshNetwork_WriteTrConf\"\n\t\t\t]\n\t\t},\n\t\t\"data\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"msgId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"Message identification for binding request with response.\"\n\t\t\t\t},\n\t\t\t\t\"repeat\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"description\": \"Number of repetitions of DPA messages.\",\n\t\t\t\t\t\"default\": 1\n\t\t\t\t},\n\t\t\t\t\"restart\": {\n\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\"description\": \"Restart required after writing the configuration.\",\n\t\t\t\t\t\"default\": true\n\t\t\t\t},\n\t\t\t\t\"req\": {\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"deviceAddr\": {\n\t\t\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\t\t\"description\": \"Device address(es) to write the configuration to. Broadcast address is also allowed.\",\n\t\t\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\t\t\"type\": \"integer\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfBand\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"description\": \"Used RF band.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfChannelA\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Main RF channel A of the main network. Valid numbers depend on used RF band.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfChannelB\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Same as above but second B channel. Used at RFPGM only.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfSubChannelA\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Main RF channel A of the optional subordinate network in case the node also plays a role of the coordinator of such network. Valid numbers depend on used RF band.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfSubChannelB\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Same as above but second B channel.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"txPower\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"RF output power. Valid numbers 0-7.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rxFilter\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"RF signal filter. Valid numbers 0-64.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"lpRxTimeout\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Timeout for receiving RF packets at LP mode at N device.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmAltChannel\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"A nonzero value specifies an alternative DPA service mode channel.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmEnableAfterReset\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If sets, then activates RFPGM invoking by TR module reset.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmTerminateAfter1Min\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If sets, then terminates RFPGM automatically ~1 minute after reset.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmTerminateMcuPin\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If sets, then terminates RFPGM by dedicated pin of the TR module.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmDualChannel\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If sets, then enables single or dual channel function.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmLpMode\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"RFPGM receiving mode setting. If set, then LP (low power) Rx mode is used during RFPGM. Otherwise STD (standard) Rx mode is used.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"rfPgmIncorrectUpload\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"Read only. Indicates that the last RFPGM has successfully been completed.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"customDpaHandler\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then a Custom DPA handler is called in case of an event.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"nodeDpaInterface\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then Node device can be controlled by a SPI or UART interface.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"uartBaudrate\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Baud rate of the UART interface if one is used.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"dpaAutoexec\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then DPA Autoexec is run at a later stage of the module boot time.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"routingOff\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then the Node device does not route packets on the background.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"ioSetup\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then DPA IO Setup is run at an early stage of the module boot time.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"peerToPeer\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If set, then device receives also peer-to-peer (non-networking) packets and raises PeerToPeer event.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"securityPassword\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"description\": \"It sets security password. If the field is left completely empty (no characters filled), the default password (16x number 0x00) is used (the same as the default set from the factory.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"securityUserKey\": {\n\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\"description\": \"It sets security user key. Enter a value up to 16 characters.\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"deviceAddr\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"returnVerbose\": {\n\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\"description\": \"Flag that includes additional parameters in the response.\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"required\": [\n\t\t\t\t\"msgId\",\n\t\t\t\t\"req\"\n\t\t\t]\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"mType\",\n\t\t\"data\"\n\t]\n}\n","x":754,"y":545,"wires":[["b95c0448.34f3e8","f3221f29.86d95"]]},{"id":"1a2f29f0.bc6516","type":"json-schema-validator","z":"2237b788.d6d558","name":"iqmeshNetwork_WriteTrConf-response","func":"{\n    \"title\": \"iqmeshNetwork_WriteTrConf-response\",\n\t\"type\": \"object\",\n\t\"properties\": {\n\t\t\"mType\": {\n\t\t\t\"type\": \"string\",\n\t\t\t\"description\": \"IQMESH Network management - Write TR configuration response.\",\n\t\t\t\"enum\": [\n\t\t\t\t\"iqmeshNetwork_WriteTrConf\"\n\t\t\t]\n\t\t},\n\t\t\"data\": {\n\t\t\t\"type\": \"object\",\n\t\t\t\"properties\": {\n\t\t\t\t\"msgId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"Message identification for binding request with response.\"\n\t\t\t\t},\n\t\t\t\t\"rsp\": {\n\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\"description\": \"Returns following values, see its description.\",\n\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\"deviceAddr\": {\n\t\t\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\t\t\"description\": \"Device address to write the configuration to. Broadcast address is also allowed.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"writeSuccess\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"If sets, then configuration has been successfully written.\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"restartNeeded\": {\n\t\t\t\t\t\t\t\"type\": \"boolean\",\n\t\t\t\t\t\t\t\"description\": \"Restart required, but not done yet.\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\"deviceAddr\",\n\t\t\t\t\t\t\"writeSuccess\",\n\t\t\t\t\t\t\"restartNeeded\"\n\t\t\t\t\t]\n\t\t\t\t},\n\t\t\t\t\"raw\": {\n\t\t\t\t\t\"type\": \"array\",\n\t\t\t\t\t\"description\": \"Returns array of objects req-cnf-rsp, see its description.\",\n\t\t\t\t\t\"items\": {\n\t\t\t\t\t\t\"type\": \"object\",\n\t\t\t\t\t\t\"properties\": {\n\t\t\t\t\t\t\t\"request\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA request.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"requestTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"confirmation\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA confirmation.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"confirmationTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"response\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"Binary buffer with DPA response.\"\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\"responseTs\": {\n\t\t\t\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\t\t\t\"description\": \"YYYY-MM-DDTHH:MM:SS.MS\"\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t\"required\": [\n\t\t\t\t\t\t\t\"request\",\n\t\t\t\t\t\t\t\"requestTs\",\n\t\t\t\t\t\t\t\"confirmation\",\n\t\t\t\t\t\t\t\"confirmationTs\",\n\t\t\t\t\t\t\t\"response\",\n\t\t\t\t\t\t\t\"responseTs\"\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t\"insId\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon instance identification.\"\n\t\t\t\t},\n\t\t\t\t\"status\": {\n\t\t\t\t\t\"type\": \"integer\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon API (general or mType) status.\"\n\t\t\t\t},\n\t\t\t\t\"statusStr\": {\n\t\t\t\t\t\"type\": \"string\",\n\t\t\t\t\t\"description\": \"IQRF GW daemon API (general or mType) status in string form.\"\n\t\t\t\t}\n\t\t\t},\n\t\t\t\"required\": [\n\t\t\t\t\"msgId\",\n\t\t\t\t\"rsp\",\n\t\t\t\t\"status\"\n\t\t\t]\n\t\t}\n\t},\n\t\"required\": [\n\t\t\"mType\",\n\t\t\"data\"\n\t]\n}\n","x":790,"y":1174.3333740234375,"wires":[["9920ed30.fc0d","8d35c9f9.ea7628"]]}]