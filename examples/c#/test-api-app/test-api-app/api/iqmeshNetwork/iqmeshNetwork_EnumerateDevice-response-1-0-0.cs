//----------------------
// <auto-generated>
//     Generated using the NJsonSchema v9.10.56.0 (Newtonsoft.Json v9.0.0.0) (http://NJsonSchema.org)
// </auto-generated>
//----------------------

namespace iqmeshNetwork_EnumerateDevice_Response
{
    #pragma warning disable // Disable all warnings

    /// <summary>First response.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class IqmeshNetwork_EnumDevice1 
    {
        /// <summary>Device is discovered.</summary>
        [Newtonsoft.Json.JsonProperty("discovered", Required = Newtonsoft.Json.Required.Always)]
        public bool Discovered { get; set; }
    
        /// <summary>Device VRN integer.</summary>
        [Newtonsoft.Json.JsonProperty("vrn", Required = Newtonsoft.Json.Required.Always)]
        public int Vrn { get; set; }
    
        /// <summary>Device zone.</summary>
        [Newtonsoft.Json.JsonProperty("zone", Required = Newtonsoft.Json.Required.Always)]
        public int Zone { get; set; }
    
        /// <summary>Device parent.</summary>
        [Newtonsoft.Json.JsonProperty("parent", Required = Newtonsoft.Json.Required.Always)]
        public int Parent { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static IqmeshNetwork_EnumDevice1 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<IqmeshNetwork_EnumDevice1>(data);
        }
    
    }
    
    /// <summary>Second response - reduced or full eperOsRead.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class IqmeshNetwork_EnumDevice2 
    {
        /// <summary>TR Module ID.</summary>
        [Newtonsoft.Json.JsonProperty("mid", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Mid { get; set; }
    
        /// <summary>IQRF OS version.</summary>
        [Newtonsoft.Json.JsonProperty("osVersion", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string OsVersion { get; set; }
    
        /// <summary>TR MCU type.</summary>
        [Newtonsoft.Json.JsonProperty("trMcuType", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string TrMcuType { get; set; }
    
        /// <summary>IQRF OS build.</summary>
        [Newtonsoft.Json.JsonProperty("osBuild", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string OsBuild { get; set; }
    
        /// <summary>See lastRSSI at IQRF OS Reference Guide.</summary>
        [Newtonsoft.Json.JsonProperty("rssi", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Rssi { get; set; }
    
        /// <summary>Module supply voltage</summary>
        [Newtonsoft.Json.JsonProperty("supplyVoltage", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string SupplyVoltage { get; set; }
    
        /// <summary>See DPA guide.</summary>
        [Newtonsoft.Json.JsonProperty("flags", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Flags { get; set; }
    
        /// <summary>See DPA guide.</summary>
        [Newtonsoft.Json.JsonProperty("slotLimits", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? SlotLimits { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static IqmeshNetwork_EnumDevice2 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<IqmeshNetwork_EnumDevice2>(data);
        }
    
    }
    
    /// <summary>Third response - reduced or full eperExploreEnum.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class IqmeshNetwork_EnumDevice3 
    {
        /// <summary>DPA version.</summary>
        [Newtonsoft.Json.JsonProperty("dpaVer", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string DpaVer { get; set; }
    
        /// <summary>Number of all non-embedded peripherals implemented by Custom DPA Handler.</summary>
        [Newtonsoft.Json.JsonProperty("perNr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? PerNr { get; set; }
    
        /// <summary>Bits array (starting from LSb of the 1st byte) specifying which of 32 embedded peripherals are enabled in the HWP Configuration.</summary>
        [Newtonsoft.Json.JsonProperty("embPers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<int> EmbPers { get; set; }
    
        /// <summary>Hardware profile identification.</summary>
        [Newtonsoft.Json.JsonProperty("hwpId", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string HwpId { get; set; }
    
        /// <summary>Hardware profile version.</summary>
        [Newtonsoft.Json.JsonProperty("hwpIdVer", Required = Newtonsoft.Json.Required.Always)]
        public int HwpIdVer { get; set; }
    
        /// <summary>Various flags.</summary>
        [Newtonsoft.Json.JsonProperty("flags", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Flags { get; set; }
    
        /// <summary>Bits array (starting from LSb of the 1st byte) specifying which of non-embedded peripherals are implemented.</summary>
        [Newtonsoft.Json.JsonProperty("userPers", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<int> UserPers { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static IqmeshNetwork_EnumDevice3 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<IqmeshNetwork_EnumDevice3>(data);
        }
    
    }
    
    /// <summary>Fourth response - reduced or full eperOsReadCfg.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class IqmeshNetwork_EnumDevice4 
    {
        /// <summary>Checksum of the Configuration part.</summary>
        [Newtonsoft.Json.JsonProperty("checkSum", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? CheckSum { get; set; }
    
        /// <summary>Content the configuration memory block from address 0x01 to 0x1F.</summary>
        [Newtonsoft.Json.JsonProperty("cfgBytes", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public System.Collections.ObjectModel.ObservableCollection<int> CfgBytes { get; set; } = new System.Collections.ObjectModel.ObservableCollection<int>();
    
        /// <summary>See parameter of setupRFPGM IQRF OS function.</summary>
        [Newtonsoft.Json.JsonProperty("rfPgm", Required = Newtonsoft.Json.Required.Always)]
        public int RfPgm { get; set; }
    
        [Newtonsoft.Json.JsonProperty("undocumented", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? Undocumented { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static IqmeshNetwork_EnumDevice4 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<IqmeshNetwork_EnumDevice4>(data);
        }
    
    }
    
    /// <summary>Sixth response - validation and updates.</summary>
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class IqmeshNetwork_EnumDevice6 
    {
        /// <summary>IQRF OS version + build, DPA version, TX power, RX filter same as Coordinator.</summary>
        [Newtonsoft.Json.JsonProperty("validation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Validation Validation { get; set; } = new Validation();
    
        /// <summary>Available updates from IQRF repository.</summary>
        [Newtonsoft.Json.JsonProperty("updates", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Updates Updates { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static IqmeshNetwork_EnumDevice6 FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<IqmeshNetwork_EnumDevice6>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class UnionResponses 
    {
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static UnionResponses FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<UnionResponses>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class IqmeshNetwork_EnumerateDevice_Response 
    {
        /// <summary>IQMESH Network management - Enumerate Device response.</summary>
        [Newtonsoft.Json.JsonProperty("mType", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        [Newtonsoft.Json.JsonConverter(typeof(Newtonsoft.Json.Converters.StringEnumConverter))]
        public IqmeshNetwork_EnumerateDevice_ResponseMType MType { get; set; }
    
        [Newtonsoft.Json.JsonProperty("data", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public Data Data { get; set; } = new Data();
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static IqmeshNetwork_EnumerateDevice_Response FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<IqmeshNetwork_EnumerateDevice_Response>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Validation 
    {
        /// <summary>All is fine.</summary>
        [Newtonsoft.Json.JsonProperty("valid", Required = Newtonsoft.Json.Required.Always)]
        public bool Valid { get; set; }
    
        /// <summary>IQRF OS version.</summary>
        [Newtonsoft.Json.JsonProperty("osVer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OsVer { get; set; }
    
        /// <summary>IQRF OS build.</summary>
        [Newtonsoft.Json.JsonProperty("osBuild", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OsBuild { get; set; }
    
        /// <summary>IQRF DPA version.</summary>
        [Newtonsoft.Json.JsonProperty("dpaVer", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DpaVer { get; set; }
    
        /// <summary>TX power.</summary>
        [Newtonsoft.Json.JsonProperty("txPower", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? TxPower { get; set; }
    
        /// <summary>RX filter.</summary>
        [Newtonsoft.Json.JsonProperty("rxFilter", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int? RxFilter { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Validation FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Validation>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Updates 
    {
        /// <summary>Path to the up to date DPA handler.</summary>
        [Newtonsoft.Json.JsonProperty("dpaHandlerPath", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DpaHandlerPath { get; set; }
    
        /// <summary>Path to the up to date DPA plugin.</summary>
        [Newtonsoft.Json.JsonProperty("dpaPluginPath", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string DpaPluginPath { get; set; }
    
        /// <summary>Path to the up to date OS+DPA plugin.</summary>
        [Newtonsoft.Json.JsonProperty("osDpaPluginPath", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string OsDpaPluginPath { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Updates FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Updates>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public enum IqmeshNetwork_EnumerateDevice_ResponseMType
    {
        [System.Runtime.Serialization.EnumMember(Value = "iqmeshNetwork_EnumerateDevice")]
    
        IqmeshNetwork_EnumerateDevice = 0,
    
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Data 
    {
        /// <summary>Message identification for binding request with response.</summary>
        [Newtonsoft.Json.JsonProperty("msgId", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string MsgId { get; set; }
    
        /// <summary>Returns following values, see its description.</summary>
        [Newtonsoft.Json.JsonProperty("rsp", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public Rsp Rsp { get; set; }
    
        /// <summary>Returns array of objects req-cnf-rsp, see its description.</summary>
        [Newtonsoft.Json.JsonProperty("raw", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public System.Collections.ObjectModel.ObservableCollection<Anonymous> Raw { get; set; }
    
        /// <summary>IQRF GW daemon instance identification.</summary>
        [Newtonsoft.Json.JsonProperty("insId", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string InsId { get; set; }
    
        /// <summary>IQRF GW daemon API (general or mType) status.</summary>
        [Newtonsoft.Json.JsonProperty("status", Required = Newtonsoft.Json.Required.Always)]
        public int Status { get; set; }
    
        /// <summary>IQRF GW daemon API (general or mType) status in string form.</summary>
        [Newtonsoft.Json.JsonProperty("statusStr", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string StatusStr { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Data FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Data>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Rsp 
    {
        /// <summary>Device address to enumerate.</summary>
        [Newtonsoft.Json.JsonProperty("deviceAddr", Required = Newtonsoft.Json.Required.Always)]
        public int DeviceAddr { get; set; }
    
        [Newtonsoft.Json.JsonProperty("result", Required = Newtonsoft.Json.Required.Always)]
        public UnionResponses Result { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Rsp FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Rsp>(data);
        }
    
    }
    
    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "9.10.56.0 (Newtonsoft.Json v9.0.0.0)")]
    public partial class Anonymous 
    {
        /// <summary>Binary buffer with DPA request.</summary>
        [Newtonsoft.Json.JsonProperty("request", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Request { get; set; }
    
        /// <summary>YYYY-MM-DDTHH:MM:SS.MS</summary>
        [Newtonsoft.Json.JsonProperty("requestTs", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string RequestTs { get; set; }
    
        /// <summary>Binary buffer with DPA confirmation.</summary>
        [Newtonsoft.Json.JsonProperty("confirmation", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Confirmation { get; set; }
    
        /// <summary>YYYY-MM-DDTHH:MM:SS.MS</summary>
        [Newtonsoft.Json.JsonProperty("confirmationTs", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ConfirmationTs { get; set; }
    
        /// <summary>Binary buffer with DPA response.</summary>
        [Newtonsoft.Json.JsonProperty("response", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string Response { get; set; }
    
        /// <summary>YYYY-MM-DDTHH:MM:SS.MS</summary>
        [Newtonsoft.Json.JsonProperty("responseTs", Required = Newtonsoft.Json.Required.Always)]
        [System.ComponentModel.DataAnnotations.Required]
        public string ResponseTs { get; set; }
    
        public string ToJson() 
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this);
        }
        
        public static Anonymous FromJson(string data)
        {
            return Newtonsoft.Json.JsonConvert.DeserializeObject<Anonymous>(data);
        }
    
    }
}